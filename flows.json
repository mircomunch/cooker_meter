[
    {
        "id": "c04dded60d457e0f",
        "type": "tab",
        "label": "Startup setup",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "710558fa.25dab8",
        "type": "tab",
        "label": "Read and save data",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6ab738f287ab7ef9",
        "type": "tab",
        "label": "Manage test",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d3b4c2e1.c71fb",
        "type": "tab",
        "label": "Settings",
        "disabled": false,
        "info": ""
    },
    {
        "id": "82e6cfb985ead96b",
        "type": "tab",
        "label": "Configurable timer",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ff263058e6c863b7",
        "type": "sqlitedb",
        "db": "/home/Greater/Desktop/energymeter.db",
        "mode": "RWC"
    },
    {
        "id": "e801217b.23cd1",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#1a79c1",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#1a79c1",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#1a79c1",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#429fe6",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#1a79c1",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Cooker Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "624ccbc0167d1984",
        "type": "ui_tab",
        "name": "Manage test",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "590f4fd2e0f3281c",
        "type": "ui_group",
        "name": "System Info",
        "tab": "c3e890fe74e7f044",
        "order": 1,
        "disp": true,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "df2566236273d26e",
        "type": "ui_group",
        "name": "Insert New",
        "tab": "624ccbc0167d1984",
        "order": 1,
        "disp": true,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c3e890fe74e7f044",
        "type": "ui_tab",
        "name": "Settings",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "be26d6ac96b8cc75",
        "type": "ui_group",
        "name": "Datetime",
        "tab": "c3e890fe74e7f044",
        "order": 2,
        "disp": true,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4b4471c50f53aec4",
        "type": "ui_group",
        "name": "Inserted",
        "tab": "624ccbc0167d1984",
        "order": 4,
        "disp": true,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6db24db1cd29db42",
        "type": "ui_group",
        "name": "Start / Stop",
        "tab": "624ccbc0167d1984",
        "order": 2,
        "disp": true,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5cd2e94ce01fda57",
        "type": "ui_group",
        "name": "Log Readings",
        "tab": "c3e890fe74e7f044",
        "order": 6,
        "disp": true,
        "width": "16",
        "collapse": true,
        "className": ""
    },
    {
        "id": "e438d182788d62ed",
        "type": "ui_group",
        "name": "Log Test",
        "tab": "c3e890fe74e7f044",
        "order": 5,
        "disp": true,
        "width": "16",
        "collapse": true,
        "className": ""
    },
    {
        "id": "1064860f840f2c27",
        "type": "ui_group",
        "name": "Delete",
        "tab": "624ccbc0167d1984",
        "order": 3,
        "disp": true,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "711a0d5a865d8c14",
        "type": "ui_spacer",
        "z": "6ab738f287ab7ef9",
        "name": "spacer",
        "group": "6db24db1cd29db42",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "32099bfcf5223dd3",
        "type": "ui_group",
        "name": "Manage Database",
        "tab": "c3e890fe74e7f044",
        "order": 3,
        "disp": false,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6588970f4a553412",
        "type": "ui_spacer",
        "z": "710558fa.25dab8",
        "name": "spacer",
        "group": "1064860f840f2c27",
        "order": 2,
        "width": "7",
        "height": "2"
    },
    {
        "id": "c43e07ff63c55613",
        "type": "ui_spacer",
        "z": "82e6cfb985ead96b",
        "name": "spacer",
        "group": "32099bfcf5223dd3",
        "order": 1,
        "width": "7",
        "height": "1"
    },
    {
        "id": "3a3e92ea.365dde",
        "type": "inject",
        "z": "c04dded60d457e0f",
        "name": "Start",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "4c8da7d223f3b678",
                "783b4cb03d902192",
                "19213cb6c9f6f8bf",
                "2239eca02f96e47c",
                "063f3b97386db3d4"
            ]
        ]
    },
    {
        "id": "4c8da7d223f3b678",
        "type": "sqlite",
        "z": "c04dded60d457e0f",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "fixed",
        "sql": "CREATE TABLE IF NOT EXISTS readings(test_id TEST, timestamp INTEGER UNIQUE, current REAL, voltage REAL, power REAL);",
        "name": "create readings",
        "x": 380,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "783b4cb03d902192",
        "type": "sqlite",
        "z": "c04dded60d457e0f",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "fixed",
        "sql": "CREATE TABLE IF NOT EXISTS test(id TEXT UNIQUE, name TEXT, description TEXT, created INTEGER, start INTEGER, stop INTEGER);",
        "name": "create test",
        "x": 370,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "19213cb6c9f6f8bf",
        "type": "link out",
        "z": "c04dded60d457e0f",
        "name": "startup",
        "mode": "link",
        "links": [
            "601c2b853b8f361d"
        ],
        "x": 315,
        "y": 40,
        "wires": []
    },
    {
        "id": "2239eca02f96e47c",
        "type": "change",
        "z": "c04dded60d457e0f",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "delete",
                "pt": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "063f3b97386db3d4",
        "type": "sqlite",
        "z": "c04dded60d457e0f",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "fixed",
        "sql": "SELECT\n    id\nFROM\n    test\nWHERE\n    stop IS NULL\n    AND\n    start IS NOT NULL\nORDER BY\n    created DESC;",
        "name": "show tests",
        "x": 370,
        "y": 340,
        "wires": [
            [
                "76ed01cbae17aba7"
            ]
        ]
    },
    {
        "id": "76ed01cbae17aba7",
        "type": "change",
        "z": "c04dded60d457e0f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "running",
                "pt": "global",
                "to": "payload[0].id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "17eada0e.06e1e6",
        "type": "function",
        "z": "710558fa.25dab8",
        "name": "",
        "func": "msg.payload = {\n   operation: 'GET',\n   // requestedDPS: [18, 19, 20]\n   schema: true\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 140,
        "wires": [
            [
                "666b465.a3faeb8"
            ]
        ]
    },
    {
        "id": "d2982ffe.c64bb",
        "type": "debug",
        "z": "710558fa.25dab8",
        "name": "response",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 100,
        "wires": []
    },
    {
        "id": "1bc34034dcbdb384",
        "type": "debug",
        "z": "710558fa.25dab8",
        "name": "State",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 140,
        "wires": []
    },
    {
        "id": "47dd842893b7ae6a",
        "type": "function",
        "z": "710558fa.25dab8",
        "name": "",
        "func": "msg.payload = {\n   operation: 'REFRESH',\n   requestedDPS: [18, 19, 20]\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 180,
        "wires": [
            [
                "666b465.a3faeb8"
            ]
        ]
    },
    {
        "id": "81d2356c9c6913f5",
        "type": "sqlite",
        "z": "710558fa.25dab8",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "msg.topic",
        "sql": "CREATE TABLE IF NOT EXISTS readings(id INTEGER, timestamp INTEGER, location TEXT NOT NULL, temperature INTEGER, humidity INTEGER, co INTEGER);",
        "name": "insert data into \"readings\"",
        "x": 710,
        "y": 580,
        "wires": [
            [
                "93a6e83efaaa13c1"
            ]
        ]
    },
    {
        "id": "42b51b6353580ef8",
        "type": "template",
        "z": "710558fa.25dab8",
        "name": "compose query",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "INSERT INTO readings\n(test_id,timestamp,current,voltage,power)\nvalues\n(\"{{global.running}}\", {{payload.timestamp}}, {{payload.current}}, {{payload.voltage}}, {{payload.power}});",
        "output": "str",
        "x": 460,
        "y": 540,
        "wires": [
            [
                "81d2356c9c6913f5",
                "5064863b45d8ae26"
            ]
        ]
    },
    {
        "id": "7d445b680c51fa48",
        "type": "function",
        "z": "710558fa.25dab8",
        "name": "parse",
        "func": "// var t = msg.payload.data.t;\nvar t = msg.timestamp;\nvar c = msg.payload.data.dps[\"18\"]/100;\nvar v = msg.payload.data.dps[\"20\"]/10;\nvar p = msg.payload.data.dps[\"19\"]/10;\nmsg.idd = msg.payload.deviceId;\n\nif (isNaN(c)) c = 'NULL';\nif (isNaN(v)) v = 'NULL';\nif (isNaN(p)) p = 'NULL';\nmsg.payload = {\n   timestamp: t,\n   current: c,\n   voltage:v,\n   power: p\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 520,
        "wires": [
            [
                "42b51b6353580ef8",
                "5fbc9d89f02312ff",
                "c19d9bec3da31028"
            ]
        ],
        "info": "insert only present data, the ones absent set to NULL"
    },
    {
        "id": "5fbc9d89f02312ff",
        "type": "debug",
        "z": "710558fa.25dab8",
        "name": "response object",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 480,
        "wires": []
    },
    {
        "id": "5064863b45d8ae26",
        "type": "debug",
        "z": "710558fa.25dab8",
        "name": "check db query",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 500,
        "wires": []
    },
    {
        "id": "93a6e83efaaa13c1",
        "type": "link out",
        "z": "710558fa.25dab8",
        "name": "link to interface",
        "mode": "link",
        "links": [],
        "x": 855,
        "y": 580,
        "wires": []
    },
    {
        "id": "666b465.a3faeb8",
        "type": "tuya-smart-device",
        "z": "710558fa.25dab8",
        "deviceName": "Smart socket",
        "disableAutoStart": false,
        "deviceId": "bfc2b520b356414f88xjxa",
        "deviceKey": "KSKi0p&G>>vfe:Qj",
        "storeAsCreds": false,
        "deviceIp": "",
        "retryTimeout": "1000",
        "findTimeout": "1000",
        "tuyaVersion": "3.3",
        "eventMode": "event-dp-refresh",
        "x": 570,
        "y": 160,
        "wires": [
            [
                "d2982ffe.c64bb",
                "0e21c14fee408ff6"
            ],
            [
                "1bc34034dcbdb384",
                "8182c84583264e8b",
                "8ea346b5c06c56b6"
            ]
        ]
    },
    {
        "id": "3379d1c8c5452e4a",
        "type": "switch",
        "z": "710558fa.25dab8",
        "name": "",
        "property": "running",
        "propertyType": "global",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 250,
        "y": 200,
        "wires": [
            [
                "47dd842893b7ae6a"
            ],
            []
        ]
    },
    {
        "id": "8182c84583264e8b",
        "type": "ui_text",
        "z": "710558fa.25dab8",
        "group": "590f4fd2e0f3281c",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Connection state:",
        "format": "{{msg.payload.state}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 810,
        "y": 200,
        "wires": []
    },
    {
        "id": "601c2b853b8f361d",
        "type": "link in",
        "z": "710558fa.25dab8",
        "name": "starting",
        "links": [
            "19213cb6c9f6f8bf"
        ],
        "x": 165,
        "y": 140,
        "wires": [
            [
                "17eada0e.06e1e6"
            ]
        ]
    },
    {
        "id": "289721c411da6b67",
        "type": "comment",
        "z": "710558fa.25dab8",
        "name": "request for data from the socket",
        "info": "",
        "x": 150,
        "y": 60,
        "wires": []
    },
    {
        "id": "15112222be29a859",
        "type": "comment",
        "z": "710558fa.25dab8",
        "name": "Parse and save the data from the socket",
        "info": "",
        "x": 180,
        "y": 420,
        "wires": []
    },
    {
        "id": "0e21c14fee408ff6",
        "type": "change",
        "z": "710558fa.25dab8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 340,
        "wires": [
            [
                "7d445b680c51fa48"
            ]
        ]
    },
    {
        "id": "3db6b347806ddbe3",
        "type": "link in",
        "z": "710558fa.25dab8",
        "name": "acquire data",
        "links": [
            "e8ae2b5439c2b898"
        ],
        "x": 165,
        "y": 200,
        "wires": [
            [
                "3379d1c8c5452e4a"
            ]
        ]
    },
    {
        "id": "8ea346b5c06c56b6",
        "type": "switch",
        "z": "710558fa.25dab8",
        "name": "",
        "property": "payload.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "CONNECTED",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "CONNECTED",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 260,
        "wires": [
            [
                "7c59aab1e73ea909"
            ],
            [
                "69db3cbd525600ed"
            ]
        ]
    },
    {
        "id": "7c59aab1e73ea909",
        "type": "change",
        "z": "710558fa.25dab8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "connected",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "69db3cbd525600ed",
        "type": "change",
        "z": "710558fa.25dab8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "connected",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "c19d9bec3da31028",
        "type": "change",
        "z": "710558fa.25dab8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "idd",
                "pt": "global",
                "to": "idd",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 640,
        "wires": [
            [
                "3955d6e6efe649ab"
            ]
        ]
    },
    {
        "id": "3955d6e6efe649ab",
        "type": "ui_text",
        "z": "710558fa.25dab8",
        "group": "590f4fd2e0f3281c",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "ID:",
        "format": "{{msg.idd}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 630,
        "y": 640,
        "wires": []
    },
    {
        "id": "2c037337afa1495a",
        "type": "ui_form",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "label": "",
        "group": "df2566236273d26e",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "ID",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Name",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Description",
                "value": "desc",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "name": "",
            "desc": ""
        },
        "payload": "",
        "submit": "insert",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 90,
        "y": 100,
        "wires": [
            [
                "2554adb11c225902",
                "fbfdd369866354cb"
            ]
        ]
    },
    {
        "id": "2554adb11c225902",
        "type": "debug",
        "z": "6ab738f287ab7ef9",
        "name": "form",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 230,
        "y": 80,
        "wires": []
    },
    {
        "id": "c1c1115b4885b7cc",
        "type": "sqlite",
        "z": "6ab738f287ab7ef9",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "msg.topic",
        "sql": "CREATE TABLE IF NOT EXISTS readings(id INTEGER, timestamp INTEGER, location TEXT NOT NULL, temperature INTEGER, humidity INTEGER, co INTEGER);",
        "name": "insert new test",
        "x": 720,
        "y": 140,
        "wires": [
            [
                "7215d99855411da3"
            ]
        ]
    },
    {
        "id": "733099ba4732e7fe",
        "type": "template",
        "z": "6ab738f287ab7ef9",
        "name": "compose query",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "INSERT INTO test\n(id,name,description,created)\nvalues\n(\"{{payload.id}}\", \"{{payload.name}}\", \"{{payload.desc}}\", {{payload.created}});",
        "output": "str",
        "x": 520,
        "y": 120,
        "wires": [
            [
                "c1c1115b4885b7cc",
                "8d4022dc48a5b819"
            ]
        ]
    },
    {
        "id": "fbfdd369866354cb",
        "type": "function",
        "z": "6ab738f287ab7ef9",
        "name": "add timestamp of creation",
        "func": "var currentDate = new Date()\nmsg.payload.created = currentDate.getTime();\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 120,
        "wires": [
            [
                "733099ba4732e7fe"
            ]
        ]
    },
    {
        "id": "8d4022dc48a5b819",
        "type": "debug",
        "z": "6ab738f287ab7ef9",
        "name": "query",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 100,
        "wires": []
    },
    {
        "id": "d5513f0cb0c5f692",
        "type": "ui_toast",
        "z": "6ab738f287ab7ef9",
        "position": "dialog",
        "displayTime": "",
        "highlight": "red",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 430,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "63b14836612f014e",
        "type": "catch",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "scope": [
            "c1c1115b4885b7cc"
        ],
        "uncaught": false,
        "x": 130,
        "y": 220,
        "wires": [
            [
                "9c9c8a0451e7d2bf"
            ]
        ]
    },
    {
        "id": "9c9c8a0451e7d2bf",
        "type": "function",
        "z": "6ab738f287ab7ef9",
        "name": "notification",
        "func": "msg. payload = \"The ID of the new test already exists!\";\nmsg.topic = \"ERROR\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 220,
        "wires": [
            [
                "d5513f0cb0c5f692"
            ]
        ]
    },
    {
        "id": "69e464032c9b837f",
        "type": "ui_table",
        "z": "6ab738f287ab7ef9",
        "group": "4b4471c50f53aec4",
        "name": "",
        "order": 1,
        "width": 16,
        "height": 10,
        "columns": [
            {
                "field": "id",
                "title": "ID",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "name",
                "title": "Name",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "description",
                "title": "Description",
                "width": "20%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "created",
                "title": "Created",
                "width": "25%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "state",
                "title": "State",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 690,
        "y": 380,
        "wires": []
    },
    {
        "id": "ddf39df0a015aa5f",
        "type": "sqlite",
        "z": "6ab738f287ab7ef9",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "fixed",
        "sql": "SELECT\n    *\nFROM\n    test\nORDER BY\n    created DESC;",
        "name": "show tests",
        "x": 270,
        "y": 360,
        "wires": [
            [
                "62b07f4592dc3abd"
            ]
        ]
    },
    {
        "id": "62b07f4592dc3abd",
        "type": "function",
        "z": "6ab738f287ab7ef9",
        "name": "add umanDate of creation",
        "func": "for (let index = 0; index < msg.payload.length; index++) {\n    const data = new Date(msg.payload[index].created);\n    const umanDate = \"\" + ((data.getDate() < 10 ? '0' : '') + data.getDate()) + \"/\" +\n                    (((data.getMonth()+1) < 10 ? '0' : '') + (data.getMonth()+1)) + \"/\" +\n                    data.getFullYear() + \" \" +\n                    ((data.getHours() < 10 ? '0' : '') + data.getHours()) + \":\" +\n                    ((data.getMinutes() < 10 ? '0' : '') + data.getMinutes())  + \":\" +\n                    ((data.getSeconds() < 10 ? '0' : '') + data.getSeconds());\n    msg.payload[index].created = umanDate;\n    if(!(msg.payload[index].start) && !(msg.payload[index].stop)) {\n        msg.payload[index].state = \"ready\"\n    }\n    else if((msg.payload[index].start) && !(msg.payload[index].stop)) {\n        msg.payload[index].state = \"running\"\n    }\n    else if((msg.payload[index].start) && (msg.payload[index].stop)) {\n        msg.payload[index].state = \"executed\"\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 360,
        "wires": [
            [
                "69e464032c9b837f",
                "b0bd4940b30224e7"
            ]
        ]
    },
    {
        "id": "c73e051ebc8ce252",
        "type": "inject",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 50,
        "y": 400,
        "wires": [
            [
                "ddf39df0a015aa5f",
                "d9dae8b61f5cc9b0",
                "8f29f6b717d27a52"
            ]
        ]
    },
    {
        "id": "b0bd4940b30224e7",
        "type": "debug",
        "z": "6ab738f287ab7ef9",
        "name": "table setup",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 340,
        "wires": []
    },
    {
        "id": "d9dae8b61f5cc9b0",
        "type": "sqlite",
        "z": "6ab738f287ab7ef9",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "fixed",
        "sql": "SELECT\n    id\nFROM\n    test\nWHERE\n    stop IS NULL\nORDER BY\n    created DESC;",
        "name": "show tests",
        "x": 270,
        "y": 500,
        "wires": [
            [
                "2f5b69afc6554bd7",
                "53f740459705a855"
            ]
        ]
    },
    {
        "id": "2f5b69afc6554bd7",
        "type": "debug",
        "z": "6ab738f287ab7ef9",
        "name": "ids to be executed",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 480,
        "wires": []
    },
    {
        "id": "44d2556f9de63817",
        "type": "ui_dropdown",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select test ID",
        "group": "6db24db1cd29db42",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 620,
        "y": 520,
        "wires": [
            [
                "3e56a3352670d246"
            ]
        ]
    },
    {
        "id": "3e56a3352670d246",
        "type": "change",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "selected",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "53f740459705a855",
        "type": "function",
        "z": "6ab738f287ab7ef9",
        "name": "set options",
        "func": "msg.options = [];\nfor (let index = 0; index < msg.payload.length; index++) {\n    const element = msg.payload[index].id;\n    msg.options.push(element);\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 520,
        "wires": [
            [
                "44d2556f9de63817"
            ]
        ]
    },
    {
        "id": "d64080391fc0d924",
        "type": "ui_button",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "group": "6db24db1cd29db42",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Start",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 760,
        "wires": [
            [
                "e4ab79c318188e97"
            ]
        ]
    },
    {
        "id": "33fd984228df3bf0",
        "type": "ui_button",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "group": "6db24db1cd29db42",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Stop",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 1020,
        "wires": [
            [
                "74d2dea6ed4c9087"
            ]
        ]
    },
    {
        "id": "fe68907f27e1dbb4",
        "type": "change",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "running",
                "pt": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1460,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "c4b24f0fb0d52a06",
        "type": "sqlite",
        "z": "6ab738f287ab7ef9",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "start test",
        "x": 760,
        "y": 860,
        "wires": [
            [
                "b9af4ba440595404",
                "f3f885757e58b489"
            ]
        ]
    },
    {
        "id": "4b1cca4651da5091",
        "type": "template",
        "z": "6ab738f287ab7ef9",
        "name": "compose query",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "UPDATE test\nSET\n    start = {{payload}}\nWHERE\n    id = \"{{global.selected}}\";\n",
        "output": "str",
        "x": 560,
        "y": 820,
        "wires": [
            [
                "c4b24f0fb0d52a06",
                "595107659360d6a0"
            ]
        ]
    },
    {
        "id": "595107659360d6a0",
        "type": "debug",
        "z": "6ab738f287ab7ef9",
        "name": "query",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 820,
        "wires": []
    },
    {
        "id": "9b8fa25fc567beda",
        "type": "sqlite",
        "z": "6ab738f287ab7ef9",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "stop test",
        "x": 1260,
        "y": 980,
        "wires": [
            [
                "abfebee53c9d352a",
                "e8ef19036bc7ecba",
                "fe68907f27e1dbb4"
            ]
        ]
    },
    {
        "id": "14ca936da9541740",
        "type": "template",
        "z": "6ab738f287ab7ef9",
        "name": "compose query",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "UPDATE test\nSET\n    stop = {{timestamp}}\nWHERE\n    id = \"{{global.running}}\";\n",
        "output": "str",
        "x": 1060,
        "y": 940,
        "wires": [
            [
                "9b8fa25fc567beda",
                "613766049f9dedde"
            ]
        ]
    },
    {
        "id": "613766049f9dedde",
        "type": "debug",
        "z": "6ab738f287ab7ef9",
        "name": "query",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 940,
        "wires": []
    },
    {
        "id": "740b46cbbc290c62",
        "type": "ui_text",
        "z": "6ab738f287ab7ef9",
        "group": "6db24db1cd29db42",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Running: ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 400,
        "y": 1160,
        "wires": []
    },
    {
        "id": "ace64fae344dbe86",
        "type": "inject",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "props": [],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 70,
        "y": 1180,
        "wires": [
            [
                "4b2978492053765f",
                "37d1ca1624cd2ef0"
            ]
        ]
    },
    {
        "id": "4b2978492053765f",
        "type": "function",
        "z": "6ab738f287ab7ef9",
        "name": "set options",
        "func": "if (global.get(\"running\")) {\n    msg.payload = global.get(\"running\")\n}\nelse {\n    msg.payload = \"-\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1160,
        "wires": [
            [
                "740b46cbbc290c62"
            ]
        ]
    },
    {
        "id": "b9af4ba440595404",
        "type": "link out",
        "z": "6ab738f287ab7ef9",
        "name": "update table",
        "mode": "link",
        "links": [
            "37da58eaa8f85a5a",
            "8503d27814f4f3f1"
        ],
        "x": 875,
        "y": 860,
        "wires": []
    },
    {
        "id": "37da58eaa8f85a5a",
        "type": "link in",
        "z": "6ab738f287ab7ef9",
        "name": "update occurred",
        "links": [
            "b9af4ba440595404",
            "abfebee53c9d352a",
            "083990817029cb84",
            "28df6d65cb31b643"
        ],
        "x": 125,
        "y": 360,
        "wires": [
            [
                "ddf39df0a015aa5f"
            ]
        ]
    },
    {
        "id": "abfebee53c9d352a",
        "type": "link out",
        "z": "6ab738f287ab7ef9",
        "name": "update table",
        "mode": "link",
        "links": [
            "37da58eaa8f85a5a",
            "8503d27814f4f3f1"
        ],
        "x": 1375,
        "y": 940,
        "wires": []
    },
    {
        "id": "37d1ca1624cd2ef0",
        "type": "switch",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "property": "running",
        "propertyType": "global",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 230,
        "y": 1220,
        "wires": [
            [
                "231ab64c956872aa"
            ],
            [
                "db4e2046126be54c"
            ]
        ]
    },
    {
        "id": "231ab64c956872aa",
        "type": "delay",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 420,
        "y": 1200,
        "wires": [
            [
                "6d4329f9d20ba005"
            ]
        ]
    },
    {
        "id": "5e16e9e9f9b7cc4b",
        "type": "sqlite",
        "z": "6ab738f287ab7ef9",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "running time",
        "x": 730,
        "y": 1200,
        "wires": [
            [
                "e4f5170b741c6876"
            ]
        ]
    },
    {
        "id": "e4f5170b741c6876",
        "type": "function",
        "z": "6ab738f287ab7ef9",
        "name": "calculate running time",
        "func": "var currentDate = new Date()\nmsg.curr = currentDate.getTime();\nmsg.elapsed = Math.round(((currentDate.getTime() - msg.payload[0].start)/1000)/60);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1320,
        "wires": [
            [
                "51117d39392e741e"
            ]
        ]
    },
    {
        "id": "e8ef19036bc7ecba",
        "type": "link out",
        "z": "6ab738f287ab7ef9",
        "name": "stopped command",
        "mode": "link",
        "links": [
            "baeca8e31a1512a3"
        ],
        "x": 1375,
        "y": 980,
        "wires": []
    },
    {
        "id": "baeca8e31a1512a3",
        "type": "link in",
        "z": "6ab738f287ab7ef9",
        "name": "stopped",
        "links": [
            "e8ef19036bc7ecba"
        ],
        "x": 125,
        "y": 500,
        "wires": [
            [
                "d9dae8b61f5cc9b0"
            ]
        ]
    },
    {
        "id": "51117d39392e741e",
        "type": "ui_text",
        "z": "6ab738f287ab7ef9",
        "group": "6db24db1cd29db42",
        "order": 7,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Time [min]: ",
        "format": "{{msg.elapsed}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 750,
        "y": 1280,
        "wires": []
    },
    {
        "id": "db4e2046126be54c",
        "type": "function",
        "z": "6ab738f287ab7ef9",
        "name": "set options",
        "func": "msg.elapsed = \"-\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1240,
        "wires": [
            [
                "51117d39392e741e"
            ]
        ]
    },
    {
        "id": "8f29f6b717d27a52",
        "type": "sqlite",
        "z": "6ab738f287ab7ef9",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "fixed",
        "sql": "SELECT\n    id\nFROM\n    test\nORDER BY\n    created DESC;",
        "name": "show tests",
        "x": 270,
        "y": 640,
        "wires": [
            [
                "5fdef0864ee79c28"
            ]
        ]
    },
    {
        "id": "5fdef0864ee79c28",
        "type": "function",
        "z": "6ab738f287ab7ef9",
        "name": "set options",
        "func": "msg.options = [];\nfor (let index = 0; index < msg.payload.length; index++) {\n    const element = msg.payload[index].id;\n    msg.options.push(element);\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 640,
        "wires": [
            [
                "6a27f745cb7292da"
            ]
        ]
    },
    {
        "id": "6a27f745cb7292da",
        "type": "ui_dropdown",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "label": "Delete Test",
        "tooltip": "",
        "place": "Select test ID",
        "group": "1064860f840f2c27",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 630,
        "y": 640,
        "wires": [
            [
                "3d888a8bc315c0e4"
            ]
        ]
    },
    {
        "id": "7215d99855411da3",
        "type": "link out",
        "z": "6ab738f287ab7ef9",
        "name": "inserted test",
        "mode": "link",
        "links": [
            "0ececf7919307ff0",
            "ab6c68f80828f1de",
            "d3b97f4589322984"
        ],
        "x": 855,
        "y": 140,
        "wires": []
    },
    {
        "id": "d3b97f4589322984",
        "type": "link in",
        "z": "6ab738f287ab7ef9",
        "name": "update after insertion",
        "links": [
            "7215d99855411da3"
        ],
        "x": 125,
        "y": 320,
        "wires": [
            [
                "ddf39df0a015aa5f"
            ]
        ]
    },
    {
        "id": "ab6c68f80828f1de",
        "type": "link in",
        "z": "6ab738f287ab7ef9",
        "name": "update after insertion",
        "links": [
            "7215d99855411da3"
        ],
        "x": 125,
        "y": 540,
        "wires": [
            [
                "d9dae8b61f5cc9b0"
            ]
        ]
    },
    {
        "id": "0ececf7919307ff0",
        "type": "link in",
        "z": "6ab738f287ab7ef9",
        "name": "update after insertion",
        "links": [
            "7215d99855411da3"
        ],
        "x": 125,
        "y": 640,
        "wires": [
            [
                "8f29f6b717d27a52"
            ]
        ]
    },
    {
        "id": "3d888a8bc315c0e4",
        "type": "change",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "delete",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "851d3e5dfbac4be2",
        "type": "ui_button",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "group": "1064860f840f2c27",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Delete",
        "tooltip": "",
        "color": "",
        "bgcolor": "black",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 70,
        "y": 1440,
        "wires": [
            [
                "49ebab8013a1c36b"
            ]
        ]
    },
    {
        "id": "18afe869fa128c54",
        "type": "sqlite",
        "z": "6ab738f287ab7ef9",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "msg.topic",
        "sql": "SELECT\n    (start,stop)\nFROM\n    test\nWHERE\n    id = {{flow.delete}};",
        "name": "select start-stop to delete",
        "x": 510,
        "y": 1500,
        "wires": [
            [
                "77aa0d610b3647ba",
                "709530aead3e613e"
            ]
        ]
    },
    {
        "id": "ae2452b3e78e800d",
        "type": "template",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT\n    created,start,stop\nFROM\n    test\nWHERE\n    id = \"{{global.delete}}\";",
        "output": "str",
        "x": 320,
        "y": 1500,
        "wires": [
            [
                "18afe869fa128c54"
            ]
        ]
    },
    {
        "id": "709530aead3e613e",
        "type": "template",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "DELETE FROM\n    test\nWHERE\n    id = \"{{global.delete}}\";",
        "output": "str",
        "x": 720,
        "y": 1500,
        "wires": [
            [
                "7c5d8f62e4ade049"
            ]
        ]
    },
    {
        "id": "7c5d8f62e4ade049",
        "type": "sqlite",
        "z": "6ab738f287ab7ef9",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "msg.topic",
        "sql": "SELECT\n    (start,stop)\nFROM\n    test\nWHERE\n    id = {{flow.delete}};",
        "name": "DELETE between start-stop",
        "x": 940,
        "y": 1500,
        "wires": [
            [
                "083990817029cb84"
            ]
        ]
    },
    {
        "id": "e262c2d2484d1f30",
        "type": "switch",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "property": "running",
        "propertyType": "global",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 800,
        "wires": [
            [
                "3b66c59dbfcbc710"
            ],
            [
                "4b1cca4651da5091"
            ]
        ]
    },
    {
        "id": "0dd2d017c4cfe28a",
        "type": "ui_toast",
        "z": "6ab738f287ab7ef9",
        "position": "dialog",
        "displayTime": "",
        "highlight": "red",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 770,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "77aa0d610b3647ba",
        "type": "function",
        "z": "6ab738f287ab7ef9",
        "name": "function 1",
        "func": "msg.topic = \"DELETE FROM readings WHERE (timestamp >= \"\n            + msg.payload[0].start + \") AND (timestamp <= \"\n            + msg.payload[0].stop + \");\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1540,
        "wires": [
            [
                "7c5d8f62e4ade049"
            ]
        ]
    },
    {
        "id": "083990817029cb84",
        "type": "link out",
        "z": "6ab738f287ab7ef9",
        "name": "update after delete",
        "mode": "link",
        "links": [
            "280aa25a5536a516",
            "37da58eaa8f85a5a",
            "8503d27814f4f3f1",
            "de4db42e0821b068",
            "22d1c32e4f96c4d6",
            "1c667f85ad7ffa2e"
        ],
        "x": 1105,
        "y": 1520,
        "wires": []
    },
    {
        "id": "741c21cd93527191",
        "type": "ui_toast",
        "z": "6ab738f287ab7ef9",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "NO",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 390,
        "y": 1440,
        "wires": [
            [
                "013a2b04e6cdc745"
            ]
        ]
    },
    {
        "id": "49ebab8013a1c36b",
        "type": "function",
        "z": "6ab738f287ab7ef9",
        "name": "notification text",
        "func": "msg.topic = \"Do you want to delete '\"+ global.get(\"delete\") +\"'?\";\nmsg.payload = \"The test and all the related data will be removed definetly\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 1440,
        "wires": [
            [
                "741c21cd93527191"
            ]
        ]
    },
    {
        "id": "013a2b04e6cdc745",
        "type": "switch",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "NO",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 170,
        "y": 1540,
        "wires": [
            [
                "ae2452b3e78e800d",
                "ba4218c8d62b2e9b"
            ],
            []
        ]
    },
    {
        "id": "74d2dea6ed4c9087",
        "type": "switch",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "property": "running",
        "propertyType": "global",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 230,
        "y": 1020,
        "wires": [
            [
                "aadf84990a639716"
            ],
            [
                "4185cc43cf5769f9"
            ]
        ]
    },
    {
        "id": "f61818877dae1543",
        "type": "ui_toast",
        "z": "6ab738f287ab7ef9",
        "position": "dialog",
        "displayTime": "",
        "highlight": "red",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "NO",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 610,
        "y": 1000,
        "wires": [
            [
                "c943d0496fc36abf"
            ]
        ]
    },
    {
        "id": "37b223a89a9044fd",
        "type": "ui_toast",
        "z": "6ab738f287ab7ef9",
        "position": "dialog",
        "displayTime": "",
        "highlight": "red",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 610,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "280aa25a5536a516",
        "type": "link in",
        "z": "6ab738f287ab7ef9",
        "name": "update dropdown",
        "links": [
            "083990817029cb84"
        ],
        "x": 125,
        "y": 680,
        "wires": [
            [
                "8f29f6b717d27a52"
            ]
        ]
    },
    {
        "id": "c943d0496fc36abf",
        "type": "switch",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 750,
        "y": 1000,
        "wires": [
            [
                "b4da7d46f7dd9638"
            ],
            []
        ]
    },
    {
        "id": "8503d27814f4f3f1",
        "type": "link in",
        "z": "6ab738f287ab7ef9",
        "name": "update occurred",
        "links": [
            "b9af4ba440595404",
            "abfebee53c9d352a",
            "083990817029cb84",
            "28df6d65cb31b643"
        ],
        "x": 125,
        "y": 460,
        "wires": [
            [
                "d9dae8b61f5cc9b0"
            ]
        ]
    },
    {
        "id": "ba4218c8d62b2e9b",
        "type": "switch",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "property": "delete",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "id",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 310,
        "y": 1560,
        "wires": [
            [
                "089d8b34a622df9a"
            ]
        ]
    },
    {
        "id": "089d8b34a622df9a",
        "type": "change",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "id",
                "pt": "global"
            },
            {
                "t": "delete",
                "p": "run",
                "pt": "global"
            },
            {
                "t": "delete",
                "p": "delete",
                "pt": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "b4da7d46f7dd9638",
        "type": "switch",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "property": "selected",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "running",
                "vt": "global"
            },
            {
                "t": "neq",
                "v": "running",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 890,
        "y": 980,
        "wires": [
            [
                "14ca936da9541740"
            ],
            [
                "ece7c398e2e415cb"
            ]
        ]
    },
    {
        "id": "5ba99b5dec01dcac",
        "type": "ui_toast",
        "z": "6ab738f287ab7ef9",
        "position": "dialog",
        "displayTime": "",
        "highlight": "red",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1070,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "6d4329f9d20ba005",
        "type": "template",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT start\nFROM\n    test\nWHERE\n    id = \"{{global.running}}\";",
        "output": "str",
        "x": 580,
        "y": 1200,
        "wires": [
            [
                "5e16e9e9f9b7cc4b"
            ]
        ]
    },
    {
        "id": "4185cc43cf5769f9",
        "type": "function",
        "z": "6ab738f287ab7ef9",
        "name": "notification text",
        "func": "msg.topic = \"No running test!\";\nmsg.payload = \"Nothing to be stopped\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1040,
        "wires": [
            [
                "37b223a89a9044fd"
            ]
        ]
    },
    {
        "id": "aadf84990a639716",
        "type": "function",
        "z": "6ab738f287ab7ef9",
        "name": "notification text",
        "func": "msg.timestamp = msg.payload;\nmsg.topic = \"Do you really want to stop the test?\";\nmsg.payload = \"'\" + global.get(\"selected\") + \"'\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1000,
        "wires": [
            [
                "f61818877dae1543"
            ]
        ]
    },
    {
        "id": "ece7c398e2e415cb",
        "type": "function",
        "z": "6ab738f287ab7ef9",
        "name": "notification text",
        "func": "msg.topic = \"The test is not running!\";\nmsg.payload = \"'\" + global.get(\"selected\") + \"'\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1000,
        "wires": [
            [
                "5ba99b5dec01dcac"
            ]
        ]
    },
    {
        "id": "3b66c59dbfcbc710",
        "type": "function",
        "z": "6ab738f287ab7ef9",
        "name": "notification text",
        "func": "msg.topic = \"A test is already running!\";\nmsg.payload = \"'\" + global.get(\"running\") + \"'\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 780,
        "wires": [
            [
                "0dd2d017c4cfe28a"
            ]
        ]
    },
    {
        "id": "f3f885757e58b489",
        "type": "change",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "running",
                "pt": "global",
                "to": "selected",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "8d4df1c4bc49ba96",
        "type": "comment",
        "z": "6ab738f287ab7ef9",
        "name": "!",
        "info": "",
        "x": 850,
        "y": 1820,
        "wires": []
    },
    {
        "id": "e4ab79c318188e97",
        "type": "switch",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "property": "connected",
        "propertyType": "global",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 230,
        "y": 760,
        "wires": [
            [
                "972447b77a3fe393"
            ],
            [
                "e262c2d2484d1f30"
            ]
        ]
    },
    {
        "id": "972447b77a3fe393",
        "type": "function",
        "z": "6ab738f287ab7ef9",
        "name": "notification text",
        "func": "msg.topic = \"Error!\";\nmsg.payload = \"The smart socket is not connected!\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 720,
        "wires": [
            [
                "592fc30f9e983724"
            ]
        ]
    },
    {
        "id": "592fc30f9e983724",
        "type": "ui_toast",
        "z": "6ab738f287ab7ef9",
        "position": "dialog",
        "displayTime": "",
        "highlight": "red",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 630,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "de4db42e0821b068",
        "type": "link in",
        "z": "6ab738f287ab7ef9",
        "name": "link in 1",
        "links": [
            "083990817029cb84"
        ],
        "x": 125,
        "y": 280,
        "wires": [
            [
                "ddf39df0a015aa5f"
            ]
        ]
    },
    {
        "id": "22d1c32e4f96c4d6",
        "type": "link in",
        "z": "6ab738f287ab7ef9",
        "name": "link in 2",
        "links": [
            "083990817029cb84"
        ],
        "x": 125,
        "y": 580,
        "wires": [
            [
                "d9dae8b61f5cc9b0"
            ]
        ]
    },
    {
        "id": "1c667f85ad7ffa2e",
        "type": "link in",
        "z": "6ab738f287ab7ef9",
        "name": "link in 3",
        "links": [
            "083990817029cb84"
        ],
        "x": 125,
        "y": 720,
        "wires": [
            [
                "8f29f6b717d27a52"
            ]
        ]
    },
    {
        "id": "cd093fbb43c2cfe8",
        "type": "sqlite",
        "z": "d3b4c2e1.c71fb",
        "d": true,
        "mydb": "ff263058e6c863b7",
        "sqlquery": "fixed",
        "sql": "SELECT DISTINCT idd FROM readings;",
        "name": "Select idds",
        "x": 310,
        "y": 100,
        "wires": [
            [
                "fc2906bfda839451"
            ]
        ]
    },
    {
        "id": "fc2906bfda839451",
        "type": "split",
        "z": "d3b4c2e1.c71fb",
        "d": true,
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 470,
        "y": 100,
        "wires": [
            [
                "e36b5f2435b24c87"
            ]
        ]
    },
    {
        "id": "e4021d5905842f4a",
        "type": "ui_text",
        "z": "d3b4c2e1.c71fb",
        "d": true,
        "group": "590f4fd2e0f3281c",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "ID:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 810,
        "y": 100,
        "wires": []
    },
    {
        "id": "5ac6deb431e8b8c2",
        "type": "ui_text",
        "z": "d3b4c2e1.c71fb",
        "group": "590f4fd2e0f3281c",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Last seen:",
        "format": "{{msg.umanDate}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 830,
        "y": 180,
        "wires": []
    },
    {
        "id": "0d9dcaab202adb8b",
        "type": "template",
        "z": "d3b4c2e1.c71fb",
        "name": "compose query",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT\n    timestamp\nFROM\n    readings\nORDER BY\n    timestamp DESC;",
        "output": "str",
        "x": 320,
        "y": 180,
        "wires": [
            [
                "4edcf6ebfaea62ac"
            ]
        ]
    },
    {
        "id": "4edcf6ebfaea62ac",
        "type": "sqlite",
        "z": "d3b4c2e1.c71fb",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SELECT last seen",
        "x": 510,
        "y": 180,
        "wires": [
            [
                "53e0b3416f6fbba5"
            ]
        ]
    },
    {
        "id": "53e0b3416f6fbba5",
        "type": "function",
        "z": "d3b4c2e1.c71fb",
        "name": "",
        "func": "var umanDate = \"-\"\nif (msg.payload[0]){\n    const timestamp = msg.payload[0].timestamp;\n    const data = new Date(timestamp);\n\n    umanDate = \"\" + ((data.getDate() < 10 ? '0' : '') + data.getDate()) + \"/\" +\n                    (((data.getMonth()+1) < 10 ? '0' : '') + (data.getMonth()+1)) + \"/\" +\n                    data.getFullYear() + \" \" +\n                    ((data.getHours() < 10 ? '0' : '') + data.getHours()) + \":\" +\n                    ((data.getMinutes() < 10 ? '0' : '') + data.getMinutes())  + \":\" +\n                    ((data.getSeconds() < 10 ? '0' : '') + data.getSeconds());\n}\nmsg.umanDate = umanDate;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 180,
        "wires": [
            [
                "5ac6deb431e8b8c2"
            ]
        ]
    },
    {
        "id": "ba924c827655ed51",
        "type": "template",
        "z": "d3b4c2e1.c71fb",
        "name": "compose query",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT\n    *\nFROM\n    readings\nORDER BY\n    timestamp DESC\nLIMIT \n    50;",
        "output": "str",
        "x": 360,
        "y": 300,
        "wires": [
            [
                "8cc0cf9de79ab0de"
            ]
        ]
    },
    {
        "id": "8cc0cf9de79ab0de",
        "type": "sqlite",
        "z": "d3b4c2e1.c71fb",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SELECT * readings",
        "x": 570,
        "y": 300,
        "wires": [
            [
                "59cd071b0eb34b7c"
            ]
        ]
    },
    {
        "id": "7334e0ba394f6d85",
        "type": "template",
        "z": "d3b4c2e1.c71fb",
        "name": "compose query",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT\n    *\nFROM\n    test\nORDER BY\n    created DESC;",
        "output": "str",
        "x": 360,
        "y": 360,
        "wires": [
            [
                "93e43cd88db8f97f"
            ]
        ]
    },
    {
        "id": "93e43cd88db8f97f",
        "type": "sqlite",
        "z": "d3b4c2e1.c71fb",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SELECT * test",
        "x": 560,
        "y": 360,
        "wires": [
            [
                "405014bf685aeebf"
            ]
        ]
    },
    {
        "id": "59cd071b0eb34b7c",
        "type": "ui_table",
        "z": "d3b4c2e1.c71fb",
        "group": "5cd2e94ce01fda57",
        "name": "readings",
        "order": 2,
        "width": 16,
        "height": 8,
        "columns": [
            {
                "field": "test_id",
                "title": "ID test",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "timestamp",
                "title": "Timestamp",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "current",
                "title": "Current",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "voltage",
                "title": "Voltage",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "power",
                "title": "Power",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 760,
        "y": 300,
        "wires": []
    },
    {
        "id": "405014bf685aeebf",
        "type": "ui_table",
        "z": "d3b4c2e1.c71fb",
        "group": "e438d182788d62ed",
        "name": "test",
        "order": 2,
        "width": 16,
        "height": 6,
        "columns": [
            {
                "field": "id",
                "title": "ID",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "name",
                "title": "Name",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "description",
                "title": "Description",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "created",
                "title": "Created",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "start",
                "title": "Start",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "stop",
                "title": "Stop",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 750,
        "y": 360,
        "wires": []
    },
    {
        "id": "98213513e6bcf571",
        "type": "inject",
        "z": "d3b4c2e1.c71fb",
        "d": true,
        "name": "",
        "props": [],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "cd093fbb43c2cfe8"
            ]
        ]
    },
    {
        "id": "e36b5f2435b24c87",
        "type": "change",
        "z": "d3b4c2e1.c71fb",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "idd",
                "pt": "global",
                "to": "payload.idd",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "idd",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 100,
        "wires": [
            [
                "e4021d5905842f4a"
            ]
        ]
    },
    {
        "id": "39a7eed1d8223087",
        "type": "inject",
        "z": "d3b4c2e1.c71fb",
        "name": "",
        "props": [],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 180,
        "wires": [
            [
                "0d9dcaab202adb8b"
            ]
        ]
    },
    {
        "id": "128a60e694462861",
        "type": "inject",
        "z": "d3b4c2e1.c71fb",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 300,
        "wires": [
            [
                "ba924c827655ed51",
                "7334e0ba394f6d85"
            ]
        ]
    },
    {
        "id": "3e0144bc1626f9bc",
        "type": "ui_button",
        "z": "d3b4c2e1.c71fb",
        "name": "",
        "group": "e438d182788d62ed",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "7334e0ba394f6d85"
            ]
        ]
    },
    {
        "id": "277452eb82bf925d",
        "type": "ui_button",
        "z": "d3b4c2e1.c71fb",
        "name": "",
        "group": "5cd2e94ce01fda57",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 360,
        "wires": [
            [
                "ba924c827655ed51"
            ]
        ]
    },
    {
        "id": "f31a598d.9fd2c8",
        "type": "function",
        "z": "d3b4c2e1.c71fb",
        "name": "Set base path",
        "func": "//restrict to c:\\temp\\\nvar basePath = \"/home/Greater/Desktop/\";\nvar filename = msg.req.params.fn;\n\n\nif(filename.includes(\"..\\\\\")){\n    msg.payload = \"Illegal file path\";\n    msg.statusCode = 405;//not allowed\n    return [null, msg];//fire output 2\n} else if(filename.includes(\"../\")){\n    msg.payload = \"Illegal file path\";\n    msg.statusCode = 405;//not allowed\n    return [null, msg];//fire output 2\n} \n//TODO: add more checks\n\nmsg.filename = basePath + filename;\nreturn [msg, null];//fire output 1\n\n\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 540,
        "wires": [
            [
                "34dc99e5.495466"
            ],
            [
                "98261154.3006"
            ]
        ]
    },
    {
        "id": "98261154.3006",
        "type": "http response",
        "z": "d3b4c2e1.c71fb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 670,
        "y": 560,
        "wires": []
    },
    {
        "id": "34dc99e5.495466",
        "type": "file in",
        "z": "d3b4c2e1.c71fb",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 500,
        "y": 520,
        "wires": [
            [
                "98261154.3006"
            ]
        ]
    },
    {
        "id": "38d65d59.1d8aa2",
        "type": "catch",
        "z": "d3b4c2e1.c71fb",
        "name": "",
        "scope": [
            "f31a598d.9fd2c8",
            "98261154.3006",
            "34dc99e5.495466",
            "3b8014a.86ad8ec",
            "67ecfa7f.3f0e24",
            "7db57965.76d468",
            "ece06122.7e762",
            "928b9f99910174b2"
        ],
        "uncaught": false,
        "x": 130,
        "y": 600,
        "wires": [
            [
                "3b8014a.86ad8ec",
                "5b18a8e7.fb8da8"
            ]
        ]
    },
    {
        "id": "3b8014a.86ad8ec",
        "type": "function",
        "z": "d3b4c2e1.c71fb",
        "name": "Set 404",
        "func": "msg.payload = msg.error;\nmsg.statusCode = 404;//resource not found\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 600,
        "wires": [
            [
                "98261154.3006"
            ]
        ]
    },
    {
        "id": "5b18a8e7.fb8da8",
        "type": "debug",
        "z": "d3b4c2e1.c71fb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 270,
        "y": 640,
        "wires": []
    },
    {
        "id": "67ecfa7f.3f0e24",
        "type": "http in",
        "z": "d3b4c2e1.c71fb",
        "name": "",
        "url": "/files/:fn",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 540,
        "wires": [
            [
                "f31a598d.9fd2c8"
            ]
        ]
    },
    {
        "id": "7db57965.76d468",
        "type": "ui_button",
        "z": "d3b4c2e1.c71fb",
        "name": "",
        "group": "32099bfcf5223dd3",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Download Database",
        "tooltip": "",
        "color": "black",
        "bgcolor": "orange",
        "className": "",
        "icon": "",
        "payload": "energymeter.db",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 140,
        "y": 1300,
        "wires": [
            [
                "ece06122.7e762"
            ]
        ]
    },
    {
        "id": "ece06122.7e762",
        "type": "trigger",
        "z": "d3b4c2e1.c71fb",
        "name": "reset msg",
        "op1": "",
        "op2": "empty",
        "op1type": "pay",
        "op2type": "str",
        "duration": "250",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 360,
        "y": 1320,
        "wires": [
            [
                "fee4a5a25262bf55"
            ]
        ]
    },
    {
        "id": "523e0d3200786186",
        "type": "ui_text",
        "z": "d3b4c2e1.c71fb",
        "group": "be26d6ac96b8cc75",
        "order": 1,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Current datetime:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 610,
        "y": 840,
        "wires": []
    },
    {
        "id": "39011c23b0657559",
        "type": "function",
        "z": "d3b4c2e1.c71fb",
        "name": "add umanDate of creation",
        "func": "const data = new Date(msg.payload);\nconst umanDate = \"\" + ((data.getDate() < 10 ? '0' : '') + data.getDate()) + \"/\" +\n                (((data.getMonth()+1) < 10 ? '0' : '') + (data.getMonth()+1)) + \"/\" +\n                data.getFullYear() + \" \" +\n                ((data.getHours() < 10 ? '0' : '') + data.getHours()) + \":\" +\n                ((data.getMinutes() < 10 ? '0' : '') + data.getMinutes())  + \":\" +\n                ((data.getSeconds() < 10 ? '0' : '') + data.getSeconds());\nmsg.payload = umanDate;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 840,
        "wires": [
            [
                "523e0d3200786186"
            ]
        ]
    },
    {
        "id": "48df0cdcfbb8b82c",
        "type": "inject",
        "z": "d3b4c2e1.c71fb",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 840,
        "wires": [
            [
                "39011c23b0657559"
            ]
        ]
    },
    {
        "id": "27f4b161325daa8c",
        "type": "ui_form",
        "z": "d3b4c2e1.c71fb",
        "name": "",
        "label": "Set datetime",
        "group": "be26d6ac96b8cc75",
        "order": 2,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Date",
                "value": "date",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "Time",
                "value": "time",
                "type": "time",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "date": "",
            "time": ""
        },
        "payload": "",
        "submit": "set",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": true,
        "className": "",
        "x": 130,
        "y": 920,
        "wires": [
            [
                "3068293f918e8287"
            ]
        ]
    },
    {
        "id": "3068293f918e8287",
        "type": "function",
        "z": "d3b4c2e1.c71fb",
        "name": "function 3",
        "func": "var date = msg.payload.date.split(\"T\");\nvar localDate = new Date(date);\nlocalDate = localDate.toLocaleDateString();\nlocalDate = localDate.split(\"/\");\nvar formattedLocalDate = localDate[2].concat(\"-\", localDate[1], \"-\", localDate[0]);\n\nvar time = msg.payload.time.split(\"T\");\nvar datetime = formattedLocalDate.concat(\"T\", time[1]);\n\nmsg.payload.formattedLocalDate = formattedLocalDate;\nmsg.payload.datetime = datetime;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 920,
        "wires": [
            [
                "be5bbf9f77d2850c"
            ]
        ]
    },
    {
        "id": "be5bbf9f77d2850c",
        "type": "exec",
        "z": "d3b4c2e1.c71fb",
        "command": "sudo date -s ",
        "addpay": "payload.datetime",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 470,
        "y": 920,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "c581d369c3ea7dbe",
        "type": "exec",
        "z": "d3b4c2e1.c71fb",
        "command": "vcgencmd measure_temp",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 350,
        "y": 1000,
        "wires": [
            [
                "a6a9068524bff789"
            ],
            [],
            []
        ]
    },
    {
        "id": "c1364b261241ec2f",
        "type": "inject",
        "z": "d3b4c2e1.c71fb",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 1000,
        "wires": [
            [
                "c581d369c3ea7dbe"
            ]
        ]
    },
    {
        "id": "c13fed97744df725",
        "type": "ui_text",
        "z": "d3b4c2e1.c71fb",
        "group": "590f4fd2e0f3281c",
        "order": 4,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "CPU temperature:",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 730,
        "y": 980,
        "wires": []
    },
    {
        "id": "a6a9068524bff789",
        "type": "function",
        "z": "d3b4c2e1.c71fb",
        "name": "function 4",
        "func": "var temp = msg.payload.split(\"=\");\ntemp = temp[1].split(\"'\");\n\nmsg.payload = temp[0];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 980,
        "wires": [
            [
                "c13fed97744df725"
            ]
        ]
    },
    {
        "id": "48ae0814c050ef96",
        "type": "ui_button",
        "z": "d3b4c2e1.c71fb",
        "name": "",
        "group": "32099bfcf5223dd3",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Delete Database",
        "tooltip": "",
        "color": "white",
        "bgcolor": "Black",
        "className": "",
        "icon": "",
        "payload": "Please download the database before, once done it can not be reverted",
        "payloadType": "str",
        "topic": "Do you REALLY want to delete all?",
        "topicType": "str",
        "x": 130,
        "y": 1160,
        "wires": [
            [
                "d1fa9a309de07d35"
            ]
        ]
    },
    {
        "id": "d1fa9a309de07d35",
        "type": "ui_toast",
        "z": "d3b4c2e1.c71fb",
        "position": "dialog",
        "displayTime": "",
        "highlight": "red",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "NO",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 330,
        "y": 1160,
        "wires": [
            [
                "eac7fa0a41ac9a81"
            ]
        ]
    },
    {
        "id": "eac7fa0a41ac9a81",
        "type": "switch",
        "z": "d3b4c2e1.c71fb",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 470,
        "y": 1160,
        "wires": [
            [
                "ed2d888545163f0e"
            ]
        ]
    },
    {
        "id": "ed2d888545163f0e",
        "type": "sqlite",
        "z": "d3b4c2e1.c71fb",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "fixed",
        "sql": "DELETE FROM test;",
        "name": "DELETE ALL",
        "x": 610,
        "y": 1160,
        "wires": [
            [
                "58b02a0b4b64caf4"
            ]
        ]
    },
    {
        "id": "58b02a0b4b64caf4",
        "type": "delay",
        "z": "d3b4c2e1.c71fb",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 760,
        "y": 1160,
        "wires": [
            [
                "2816bae22586759f"
            ]
        ]
    },
    {
        "id": "2816bae22586759f",
        "type": "sqlite",
        "z": "d3b4c2e1.c71fb",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "fixed",
        "sql": "DELETE FROM readings;",
        "name": "DELETE ALL",
        "x": 910,
        "y": 1160,
        "wires": [
            [
                "6965c50d8ea116ca"
            ]
        ]
    },
    {
        "id": "4703631d570c1122",
        "type": "ui_button",
        "z": "d3b4c2e1.c71fb",
        "name": "",
        "group": "32099bfcf5223dd3",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reboot system",
        "tooltip": "",
        "color": "white",
        "bgcolor": "grey",
        "className": "",
        "icon": "",
        "payload": "You will be disconnected, make sure you stop the test",
        "payloadType": "str",
        "topic": "Do you REALLY want to reboot the system?",
        "topicType": "str",
        "x": 120,
        "y": 1240,
        "wires": [
            [
                "19c091edd690145e"
            ]
        ]
    },
    {
        "id": "19c091edd690145e",
        "type": "ui_toast",
        "z": "d3b4c2e1.c71fb",
        "position": "dialog",
        "displayTime": "",
        "highlight": "red",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "NO",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 330,
        "y": 1240,
        "wires": [
            [
                "ebeaa4bcfd0182db"
            ]
        ]
    },
    {
        "id": "ebeaa4bcfd0182db",
        "type": "switch",
        "z": "d3b4c2e1.c71fb",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "OK",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 490,
        "y": 1240,
        "wires": [
            [
                "ad1b2bb481e939fd"
            ]
        ]
    },
    {
        "id": "ad1b2bb481e939fd",
        "type": "exec",
        "z": "d3b4c2e1.c71fb",
        "command": "sudo reboot",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 650,
        "y": 1240,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "928b9f99910174b2",
        "type": "ui_button",
        "z": "d3b4c2e1.c71fb",
        "name": "",
        "group": "32099bfcf5223dd3",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Download log",
        "tooltip": "",
        "color": "white",
        "bgcolor": "blue",
        "className": "",
        "icon": "",
        "payload": "log.txt",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 120,
        "y": 1360,
        "wires": [
            [
                "ece06122.7e762"
            ]
        ]
    },
    {
        "id": "297ce2e395668ea6",
        "type": "file",
        "z": "d3b4c2e1.c71fb",
        "name": "",
        "filename": "\\home\\Greater\\Desktop\\log.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 370,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "43ce0471d3d4b33a",
        "type": "comment",
        "z": "d3b4c2e1.c71fb",
        "name": "log file creation",
        "info": "",
        "x": 120,
        "y": 1400,
        "wires": []
    },
    {
        "id": "6965c50d8ea116ca",
        "type": "link out",
        "z": "d3b4c2e1.c71fb",
        "name": "update after delete",
        "mode": "link",
        "links": [],
        "x": 965,
        "y": 1080,
        "wires": []
    },
    {
        "id": "7e243e77d0006b4e",
        "type": "catch",
        "z": "d3b4c2e1.c71fb",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 1440,
        "wires": [
            [
                "297ce2e395668ea6"
            ]
        ]
    },
    {
        "id": "3f7b1294b5da8586",
        "type": "status",
        "z": "d3b4c2e1.c71fb",
        "name": "",
        "scope": null,
        "x": 100,
        "y": 1500,
        "wires": [
            [
                "297ce2e395668ea6"
            ]
        ]
    },
    {
        "id": "fee4a5a25262bf55",
        "type": "ui_template",
        "z": "d3b4c2e1.c71fb",
        "group": "32099bfcf5223dd3",
        "name": "window redirect",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "<script>\n(function(scope) {\n    scope.$watch('msg.payload', function(data) {\n        if (data == \"energymeter.db\"){\n            window.location.href = \"/files/energymeter.db\";\n        }\n        if (data == \"log.txt\"){\n            window.location.href = \"/files/log.txt\";\n        }\n    });\n})(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 540,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "3234f262056babaf",
        "type": "delay",
        "z": "82e6cfb985ead96b",
        "name": "Recursive delay",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": true,
        "outputs": 1,
        "x": 620,
        "y": 460,
        "wires": [
            [
                "572e6832bcf30618",
                "e8ae2b5439c2b898",
                "336b515a6739015b"
            ]
        ]
    },
    {
        "id": "d6577d4db9cbded4",
        "type": "inject",
        "z": "82e6cfb985ead96b",
        "name": "1s rate",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1000",
        "payloadType": "num",
        "x": 120,
        "y": 80,
        "wires": [
            [
                "5ea132331cb6a8c4"
            ]
        ]
    },
    {
        "id": "4158a248e1e2b3e4",
        "type": "change",
        "z": "82e6cfb985ead96b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "period",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 380,
        "wires": [
            [
                "b300a73d7dc605ae",
                "dc0ddfa85869080c"
            ]
        ]
    },
    {
        "id": "572e6832bcf30618",
        "type": "change",
        "z": "82e6cfb985ead96b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "delay",
                "pt": "msg",
                "to": "period",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 380,
        "wires": [
            [
                "3234f262056babaf"
            ]
        ]
    },
    {
        "id": "bf8022099b6ce347",
        "type": "inject",
        "z": "82e6cfb985ead96b",
        "d": true,
        "name": "Stop",
        "props": [
            {
                "p": "reset",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 390,
        "y": 500,
        "wires": [
            [
                "3234f262056babaf"
            ]
        ]
    },
    {
        "id": "966379b5822bea96",
        "type": "comment",
        "z": "82e6cfb985ead96b",
        "name": "Programmable interval inject",
        "info": "This flow functions and an inject node, but allows the interval to be changed.\nThe basic principle that the delay node output if fed back to itself through a change node which sets the appropriate delay for each message.\n\nThe 3 sample inject node set the interval to 1s, 2s, 5s. The interval is sent in the msg.payload in milliseconds.\nThese inject nodes can be supplemented with a dashboard input field (slider, dropdown) so it can be controlled from the screen as well.\nThis flow does not start sending out messages when deployed, if that is required, create another inject node with default rate and set to trigger on startup. \nI also added a \"Autostart with saved value\" this should be used if the flow variable is saved to file (in that case update the change nodes to use the file storage) so it can restart the trigger with the last delay value read from the file system (set this inject node to trigger on startup).\n\nThe interval is stored in a flow context variable, and this value is inserted into the message every time by the change node above the delay node. This ensures that if the rate value in the context value changes, it is applied at the next message.\n\nI added the delay 100ms and the msg.reset nodes, because when the rate changes it introduces a new message the recursive loop and that would mess up the timing.\n\n\"Stop\" inject node resets the delay node (deleted the message that keeps triggeting itelf) and stops the process.",
        "x": 140,
        "y": 40,
        "wires": []
    },
    {
        "id": "dc0ddfa85869080c",
        "type": "change",
        "z": "82e6cfb985ead96b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 460,
        "wires": [
            [
                "3234f262056babaf"
            ]
        ]
    },
    {
        "id": "b300a73d7dc605ae",
        "type": "delay",
        "z": "82e6cfb985ead96b",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 410,
        "y": 380,
        "wires": [
            [
                "572e6832bcf30618"
            ]
        ]
    },
    {
        "id": "a03f349569110a9a",
        "type": "function",
        "z": "82e6cfb985ead96b",
        "name": "s to ms",
        "func": "msg.payload = msg.payload*1000;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 260,
        "wires": [
            [
                "4158a248e1e2b3e4"
            ]
        ]
    },
    {
        "id": "d991c2f0413ac064",
        "type": "ui_slider",
        "z": "82e6cfb985ead96b",
        "name": "",
        "label": "Acquisition period [s]",
        "tooltip": "Insert the interval in seconds from 1 to 120",
        "group": "6db24db1cd29db42",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": "1",
        "max": "120",
        "step": 1,
        "className": "",
        "x": 500,
        "y": 260,
        "wires": [
            [
                "a03f349569110a9a"
            ]
        ]
    },
    {
        "id": "a2aa1cd66610da5e",
        "type": "function",
        "z": "82e6cfb985ead96b",
        "name": "ms to s",
        "func": "msg.payload = msg.payload/1000;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 260,
        "wires": [
            [
                "d991c2f0413ac064"
            ]
        ]
    },
    {
        "id": "5ea132331cb6a8c4",
        "type": "switch",
        "z": "82e6cfb985ead96b",
        "name": "",
        "property": "period",
        "propertyType": "flow",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 80,
        "wires": [
            [
                "037a7ea104c8b36a"
            ],
            [
                "a2aa1cd66610da5e",
                "4158a248e1e2b3e4"
            ]
        ]
    },
    {
        "id": "037a7ea104c8b36a",
        "type": "change",
        "z": "82e6cfb985ead96b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "period",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 60,
        "wires": [
            [
                "a2aa1cd66610da5e",
                "4158a248e1e2b3e4"
            ]
        ]
    },
    {
        "id": "e8ae2b5439c2b898",
        "type": "link out",
        "z": "82e6cfb985ead96b",
        "name": "acquire timer",
        "mode": "link",
        "links": [
            "3db6b347806ddbe3"
        ],
        "x": 765,
        "y": 460,
        "wires": []
    },
    {
        "id": "336b515a6739015b",
        "type": "debug",
        "z": "82e6cfb985ead96b",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 520,
        "wires": []
    }
]