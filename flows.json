[
    {
        "id": "710558fa.25dab8",
        "type": "tab",
        "label": "Read and save data",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d3b4c2e1.c71fb",
        "type": "tab",
        "label": "Settings",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6ab738f287ab7ef9",
        "type": "tab",
        "label": "Insert test",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e146cdeecf9bcebd",
        "type": "tab",
        "label": "Manage test",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7c26349d.98cf8c",
        "type": "tab",
        "label": "Interface",
        "disabled": true,
        "info": ""
    },
    {
        "id": "22052e68fedf6ce6",
        "type": "tab",
        "label": "Dummy uC",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f58570a26e45bbdc",
        "type": "tab",
        "label": "MQTT - datetime e cmd",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2f589c1fa72f19be",
        "type": "tab",
        "label": "MQTT - sensors",
        "disabled": false,
        "info": ""
    },
    {
        "id": "464086673e62efae",
        "type": "tab",
        "label": "log",
        "disabled": false,
        "info": ""
    },
    {
        "id": "24e38c8e9edd57c3",
        "type": "group",
        "z": "22052e68fedf6ce6",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "27c2dce6c4d7b089",
            "4dc1cbd578ef6065",
            "caea89b14caf1c92",
            "065aebc4b5cc9c76",
            "ad2ed75dae9f6022",
            "b69c384fe6c0685b",
            "84cb1690f793d411",
            "455840f784681733",
            "5429f86c39cf2384",
            "baabe529f7bd0577",
            "8a9d8b8567b03ad7",
            "0774912643e5f5bf",
            "821bc403f30361e3",
            "13944cdd0a4d2bd7",
            "6fe6b321b99a40d0",
            "b54f4203d162e4d6",
            "f58a79e17e9c1853",
            "d9192735b783c1bc"
        ],
        "x": 74,
        "y": 39,
        "w": 872,
        "h": 582
    },
    {
        "id": "ff263058e6c863b7",
        "type": "sqlitedb",
        "db": "/home/Greater/Desktop/energymeter.db",
        "mode": "RWC"
    },
    {
        "id": "e801217b.23cd1",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#1a79c1",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#1a79c1",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#1a79c1",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#429fe6",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#1a79c1",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Cooker Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "menu",
            "lockMenu": "true",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "624ccbc0167d1984",
        "type": "ui_tab",
        "name": "Insert",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e20e8dfcf55ba57e",
        "type": "ui_group",
        "d": true,
        "name": "Current",
        "tab": "624ccbc0167d1984",
        "order": 3,
        "disp": true,
        "width": "16",
        "collapse": true,
        "className": ""
    },
    {
        "id": "6d7eafb3ae89f441",
        "type": "ui_group",
        "d": true,
        "name": "Voltage",
        "tab": "624ccbc0167d1984",
        "order": 4,
        "disp": true,
        "width": "16",
        "collapse": true,
        "className": ""
    },
    {
        "id": "590f4fd2e0f3281c",
        "type": "ui_group",
        "name": "Last seen",
        "tab": "c3e890fe74e7f044",
        "order": 1,
        "disp": true,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4930880ae94878e3",
        "type": "ui_group",
        "d": true,
        "name": "Stats",
        "tab": "624ccbc0167d1984",
        "order": 6,
        "disp": true,
        "width": "1",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bb5dd6f7568c5483",
        "type": "ui_group",
        "d": true,
        "name": "Power",
        "tab": "624ccbc0167d1984",
        "order": 5,
        "disp": true,
        "width": "16",
        "collapse": true,
        "className": ""
    },
    {
        "id": "d7fa4edb4ea08595",
        "type": "ui_spacer",
        "z": "7c26349d.98cf8c",
        "name": "spacer",
        "group": "590f4fd2e0f3281c",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "1f69d9688fa7b1ca",
        "type": "ui_tab",
        "name": "Manage",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "df2566236273d26e",
        "type": "ui_group",
        "name": "Insert New Test",
        "tab": "624ccbc0167d1984",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c3e890fe74e7f044",
        "type": "ui_tab",
        "name": "Settings",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1e6e2f3d5466b64e",
        "type": "ui_tab",
        "name": "Executed",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "be26d6ac96b8cc75",
        "type": "ui_group",
        "name": "Delete",
        "tab": "c3e890fe74e7f044",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f14a0f059c981c25",
        "type": "mqtt-broker",
        "name": "hiveMQ free",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "tls": "",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "4ab556e815260d6e",
        "type": "ui_group",
        "name": "chart",
        "tab": "",
        "order": 4,
        "disp": false,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "5f10cab10122c8a2",
        "type": "ui_group",
        "name": "table",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e7518674fd285e30",
        "type": "mqtt-broker",
        "name": "hiveMQ console",
        "broker": "350fd0725fa14a069e04d387121e69f7.s2.eu.hivemq.cloud",
        "port": "8883",
        "tls": "",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "31548b849fd4d661",
        "type": "ui_spacer",
        "z": "2f589c1fa72f19be",
        "name": "spacer",
        "group": "4ab556e815260d6e",
        "order": 1,
        "width": 3,
        "height": 1
    },
    {
        "id": "df0aac56159d03ef",
        "type": "ui_spacer",
        "z": "2f589c1fa72f19be",
        "name": "spacer",
        "group": "4ab556e815260d6e",
        "order": 3,
        "width": 2,
        "height": 1
    },
    {
        "id": "75e25d71e49cbe09",
        "type": "ui_spacer",
        "z": "2f589c1fa72f19be",
        "name": "spacer",
        "group": "4ab556e815260d6e",
        "order": 5,
        "width": 5,
        "height": 1
    },
    {
        "id": "b6feb7cd1ed37885",
        "type": "ui_spacer",
        "z": "2f589c1fa72f19be",
        "name": "spacer",
        "group": "4ab556e815260d6e",
        "order": 6,
        "width": 16,
        "height": 1
    },
    {
        "id": "9611727cf8968ba3",
        "type": "ui_spacer",
        "z": "2f589c1fa72f19be",
        "name": "spacer",
        "group": "4ab556e815260d6e",
        "order": 8,
        "width": 6,
        "height": 1
    },
    {
        "id": "588ff3a4d912c43a",
        "type": "ui_spacer",
        "z": "2f589c1fa72f19be",
        "name": "spacer",
        "group": "4ab556e815260d6e",
        "order": 10,
        "width": 6,
        "height": 1
    },
    {
        "id": "c64a9c9d58545730",
        "type": "ui_spacer",
        "z": "464086673e62efae",
        "name": "spacer",
        "group": "5f10cab10122c8a2",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "f3174bc95ef0fa92",
        "type": "ui_spacer",
        "z": "464086673e62efae",
        "name": "spacer",
        "group": "5f10cab10122c8a2",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "b045b61a5521db78",
        "type": "ui_spacer",
        "z": "464086673e62efae",
        "name": "spacer",
        "group": "5f10cab10122c8a2",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "34a4e3177687a910",
        "type": "ui_spacer",
        "z": "464086673e62efae",
        "name": "spacer",
        "group": "5f10cab10122c8a2",
        "order": 6,
        "width": 10,
        "height": 1
    },
    {
        "id": "66395aec281639b7",
        "type": "ui_spacer",
        "z": "464086673e62efae",
        "name": "spacer",
        "group": "5f10cab10122c8a2",
        "order": 8,
        "width": 3,
        "height": 1
    },
    {
        "id": "da8bfe0ebb0c7ae6",
        "type": "ui_spacer",
        "z": "464086673e62efae",
        "name": "spacer",
        "group": "5f10cab10122c8a2",
        "order": 10,
        "width": 3,
        "height": 1
    },
    {
        "id": "4b4471c50f53aec4",
        "type": "ui_group",
        "name": "Existing Tests",
        "tab": "624ccbc0167d1984",
        "order": 2,
        "disp": true,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6db24db1cd29db42",
        "type": "ui_group",
        "name": "start and stop",
        "tab": "1f69d9688fa7b1ca",
        "order": 1,
        "disp": false,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5cd2e94ce01fda57",
        "type": "ui_group",
        "name": "log",
        "tab": "c3e890fe74e7f044",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3a3e92ea.365dde",
        "type": "inject",
        "z": "710558fa.25dab8",
        "name": "Start",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "17eada0e.06e1e6"
            ]
        ]
    },
    {
        "id": "17eada0e.06e1e6",
        "type": "function",
        "z": "710558fa.25dab8",
        "name": "",
        "func": "msg.payload = {\n   operation: 'GET',\n   // requestedDPS: [18, 19, 20]\n   schema: true\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 120,
        "wires": [
            [
                "666b465.a3faeb8"
            ]
        ]
    },
    {
        "id": "d2982ffe.c64bb",
        "type": "debug",
        "z": "710558fa.25dab8",
        "name": "response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 100,
        "wires": []
    },
    {
        "id": "1bc34034dcbdb384",
        "type": "debug",
        "z": "710558fa.25dab8",
        "name": "State",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 140,
        "wires": []
    },
    {
        "id": "4c8da7d223f3b678",
        "type": "sqlite",
        "z": "710558fa.25dab8",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "fixed",
        "sql": "CREATE TABLE IF NOT EXISTS readings(timestamp INTEGER UNIQUE, idd TEXT, current REAL, voltage REAL, power REAL);",
        "name": "create table",
        "x": 710,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "8506f20235efc81d",
        "type": "inject",
        "z": "710558fa.25dab8",
        "name": "Refresh",
        "props": [],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 120,
        "y": 200,
        "wires": [
            [
                "47dd842893b7ae6a"
            ]
        ]
    },
    {
        "id": "47dd842893b7ae6a",
        "type": "function",
        "z": "710558fa.25dab8",
        "name": "",
        "func": "msg.payload = {\n   operation: 'REFRESH',\n   requestedDPS: [18, 19, 20]\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 200,
        "wires": [
            [
                "666b465.a3faeb8"
            ]
        ]
    },
    {
        "id": "81d2356c9c6913f5",
        "type": "sqlite",
        "z": "710558fa.25dab8",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "msg.topic",
        "sql": "CREATE TABLE IF NOT EXISTS readings(id INTEGER, timestamp INTEGER, location TEXT NOT NULL, temperature INTEGER, humidity INTEGER, co INTEGER);",
        "name": "insert data into \"readings\"",
        "x": 750,
        "y": 440,
        "wires": [
            [
                "93a6e83efaaa13c1"
            ]
        ]
    },
    {
        "id": "42b51b6353580ef8",
        "type": "template",
        "z": "710558fa.25dab8",
        "name": "compose query",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "INSERT INTO readings\n(timestamp,idd,current,voltage,power)\nvalues\n({{payload.timestamp}}, \"{{payload.idd}}\", {{payload.current}}, {{payload.voltage}}, {{payload.power}});",
        "output": "str",
        "x": 720,
        "y": 380,
        "wires": [
            [
                "81d2356c9c6913f5",
                "5064863b45d8ae26"
            ]
        ]
    },
    {
        "id": "7d445b680c51fa48",
        "type": "function",
        "z": "710558fa.25dab8",
        "name": "parse",
        "func": "var t = msg.payload.data.t;\nvar c = msg.payload.data.dps[\"18\"]/100;\nvar v = msg.payload.data.dps[\"20\"]/10;\nvar p = msg.payload.data.dps[\"19\"]/10;\nvar idd = msg.payload.deviceId;\n\nif (isNaN(c)) c = 'NULL';\nif (isNaN(v)) v = 'NULL';\nif (isNaN(p)) p = 'NULL';\nmsg.payload = {\n   timestamp: t,\n   idd: idd,\n   current: c,\n   voltage:v,\n   power: p\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 320,
        "wires": [
            [
                "42b51b6353580ef8",
                "5fbc9d89f02312ff"
            ]
        ],
        "info": "insert only present data, the ones absent set to NULL"
    },
    {
        "id": "5fbc9d89f02312ff",
        "type": "debug",
        "z": "710558fa.25dab8",
        "name": "response object",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 320,
        "wires": []
    },
    {
        "id": "5064863b45d8ae26",
        "type": "debug",
        "z": "710558fa.25dab8",
        "name": "check db query",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 380,
        "wires": []
    },
    {
        "id": "93a6e83efaaa13c1",
        "type": "link out",
        "z": "710558fa.25dab8",
        "name": "link to interface",
        "mode": "link",
        "links": [
            "3f4966d0.43d8fa",
            "c023bf66bb5c99b9"
        ],
        "x": 895,
        "y": 440,
        "wires": []
    },
    {
        "id": "666b465.a3faeb8",
        "type": "tuya-smart-device",
        "z": "710558fa.25dab8",
        "deviceName": "Smart socket",
        "disableAutoStart": false,
        "deviceId": "bfc2b520b356414f88xjxa",
        "deviceKey": "KSKi0p&G>>vfe:Qj",
        "storeAsCreds": false,
        "deviceIp": "",
        "retryTimeout": "1000",
        "findTimeout": "1000",
        "tuyaVersion": "3.3",
        "eventMode": "event-dp-refresh",
        "x": 450,
        "y": 160,
        "wires": [
            [
                "d2982ffe.c64bb",
                "4c8da7d223f3b678",
                "7d445b680c51fa48"
            ],
            [
                "1bc34034dcbdb384"
            ]
        ]
    },
    {
        "id": "6b13e73c.612848",
        "type": "sqlite",
        "z": "d3b4c2e1.c71fb",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "fixed",
        "sql": "DELETE FROM readings;",
        "name": "DELETE ALL readings",
        "x": 400,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "af390f24cbed13fa",
        "type": "inject",
        "z": "d3b4c2e1.c71fb",
        "name": "Delete",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 60,
        "wires": [
            [
                "6b13e73c.612848"
            ]
        ]
    },
    {
        "id": "6ba41828fbe34587",
        "type": "sqlite",
        "z": "d3b4c2e1.c71fb",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "fixed",
        "sql": "DELETE FROM test;",
        "name": "DELETE ALL test",
        "x": 390,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "21d04d094163a17d",
        "type": "inject",
        "z": "d3b4c2e1.c71fb",
        "name": "Delete",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 140,
        "wires": [
            [
                "6ba41828fbe34587"
            ]
        ]
    },
    {
        "id": "7f05affcd33edc84",
        "type": "sqlite",
        "z": "d3b4c2e1.c71fb",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "fixed",
        "sql": "DELETE FROM test;\nDELETE FROM readings;",
        "name": "DELETE ALL!",
        "x": 380,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "cacba5095889174c",
        "type": "inject",
        "z": "d3b4c2e1.c71fb",
        "name": "Delete",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 220,
        "wires": [
            [
                "7f05affcd33edc84"
            ]
        ]
    },
    {
        "id": "9b1662ebf8a4632a",
        "type": "sqlite",
        "z": "d3b4c2e1.c71fb",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "msg.topic",
        "sql": "DELETE FROM test;\nDELETE FROM readings;",
        "name": "DELETE from timestamp to timestamp",
        "x": 450,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "50de0f3a5e17f893",
        "type": "ui_form",
        "z": "d3b4c2e1.c71fb",
        "name": "",
        "label": "Delete",
        "group": "be26d6ac96b8cc75",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "from",
                "value": "start",
                "type": "time",
                "required": true,
                "rows": null
            },
            {
                "label": "to",
                "value": "end",
                "type": "time",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "start": "",
            "end": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "payload",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 170,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "cd093fbb43c2cfe8",
        "type": "sqlite",
        "z": "d3b4c2e1.c71fb",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "fixed",
        "sql": "SELECT DISTINCT idd FROM readings;",
        "name": "Select ids",
        "x": 160,
        "y": 480,
        "wires": [
            [
                "fc2906bfda839451"
            ]
        ]
    },
    {
        "id": "48b7d0a18f0b7620",
        "type": "switch",
        "z": "d3b4c2e1.c71fb",
        "name": "",
        "property": "payload.idd",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "bfc2b520b356414f88xjxa",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 450,
        "y": 480,
        "wires": [
            [
                "e4021d5905842f4a",
                "0d9dcaab202adb8b"
            ]
        ]
    },
    {
        "id": "fc2906bfda839451",
        "type": "split",
        "z": "d3b4c2e1.c71fb",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 310,
        "y": 480,
        "wires": [
            [
                "48b7d0a18f0b7620"
            ]
        ]
    },
    {
        "id": "e4021d5905842f4a",
        "type": "ui_text",
        "z": "d3b4c2e1.c71fb",
        "group": "590f4fd2e0f3281c",
        "order": 1,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "ID:",
        "format": "{{msg.payload.id}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 150,
        "y": 580,
        "wires": []
    },
    {
        "id": "5ac6deb431e8b8c2",
        "type": "ui_text",
        "z": "d3b4c2e1.c71fb",
        "group": "590f4fd2e0f3281c",
        "order": 3,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "Last seen:",
        "format": "{{msg.lastday}}/{{msg.lastmonth}}/{{msg.lastyear}} {{msg.lasthour}}:{{msg.lastminute}}:{{msg.lastsecond}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 750,
        "y": 620,
        "wires": []
    },
    {
        "id": "0d9dcaab202adb8b",
        "type": "template",
        "z": "d3b4c2e1.c71fb",
        "name": "compose query",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT\n    timestamp\nFROM\n    readings\nWHERE\n    (id == \"{{payload.id}}\")\nORDER BY\n    timestamp DESC;",
        "output": "str",
        "x": 180,
        "y": 620,
        "wires": [
            [
                "4edcf6ebfaea62ac"
            ]
        ]
    },
    {
        "id": "4edcf6ebfaea62ac",
        "type": "sqlite",
        "z": "d3b4c2e1.c71fb",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SELECT last seen",
        "x": 390,
        "y": 620,
        "wires": [
            [
                "53e0b3416f6fbba5"
            ]
        ]
    },
    {
        "id": "53e0b3416f6fbba5",
        "type": "function",
        "z": "d3b4c2e1.c71fb",
        "name": "",
        "func": "const timestamp = msg.payload[0].timestamp*1000;\nconst data = new Date(timestamp);\nmsg = {\n    timestamp: timestamp,\n    lastday: data.getDate(),\n    lastmonth: data.getMonth()+1,\n    lastyear: data.getFullYear(),\n    lasthour: data.getHours(),\n    lastminute: data.getMinutes(),\n    lastsecond: data.getSeconds()\n};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 620,
        "wires": [
            [
                "5ac6deb431e8b8c2"
            ]
        ]
    },
    {
        "id": "ba924c827655ed51",
        "type": "template",
        "z": "d3b4c2e1.c71fb",
        "name": "compose query",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT\n    *\nFROM\n    readings\nWHERE\n    (idd == \"{{payload.idd}}\")\nORDER BY\n    timestamp DESC;",
        "output": "str",
        "x": 180,
        "y": 680,
        "wires": [
            [
                "8cc0cf9de79ab0de"
            ]
        ]
    },
    {
        "id": "8cc0cf9de79ab0de",
        "type": "sqlite",
        "z": "d3b4c2e1.c71fb",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SELECT * readings",
        "x": 390,
        "y": 680,
        "wires": [
            [
                "a20df9b96abb6476"
            ]
        ]
    },
    {
        "id": "a20df9b96abb6476",
        "type": "function",
        "z": "d3b4c2e1.c71fb",
        "name": "",
        "func": "const timestamp = msg.payload[0].timestamp*1000;\nconst data = new Date(timestamp);\nmsg = {\n    timestamp: timestamp,\n    lastday: data.getDate(),\n    lastmonth: data.getMonth()+1,\n    lastyear: data.getFullYear(),\n    lasthour: data.getHours(),\n    lastminute: data.getMinutes(),\n    lastsecond: data.getSeconds()\n};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 680,
        "wires": [
            [
                "59cd071b0eb34b7c"
            ]
        ]
    },
    {
        "id": "7334e0ba394f6d85",
        "type": "template",
        "z": "d3b4c2e1.c71fb",
        "name": "compose query",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT\n    *\nFROM\n    test\nORDER BY\n    timestamp DESC;",
        "output": "str",
        "x": 180,
        "y": 740,
        "wires": [
            [
                "93e43cd88db8f97f"
            ]
        ]
    },
    {
        "id": "93e43cd88db8f97f",
        "type": "sqlite",
        "z": "d3b4c2e1.c71fb",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SELECT * test",
        "x": 380,
        "y": 740,
        "wires": [
            [
                "db04a685293cd144"
            ]
        ]
    },
    {
        "id": "59cd071b0eb34b7c",
        "type": "ui_table",
        "z": "d3b4c2e1.c71fb",
        "group": "5cd2e94ce01fda57",
        "name": "readings",
        "order": 0,
        "width": 0,
        "height": 0,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 740,
        "y": 680,
        "wires": []
    },
    {
        "id": "405014bf685aeebf",
        "type": "ui_table",
        "z": "d3b4c2e1.c71fb",
        "group": "4b4471c50f53aec4",
        "name": "test",
        "order": 1,
        "width": "20",
        "height": "12",
        "columns": [
            {
                "field": "id",
                "title": "ID",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "name",
                "title": "Name",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "description",
                "title": "Description",
                "width": "20%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "created",
                "title": "Created",
                "width": "25%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "start",
                "title": "Start",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "stop",
                "title": "Stop",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 830,
        "y": 740,
        "wires": []
    },
    {
        "id": "db04a685293cd144",
        "type": "function",
        "z": "d3b4c2e1.c71fb",
        "name": "add timestamp of creation",
        "func": "for (let index = 0; index < msg.payload.length; index++) {\n    const data = new Date(msg.payload[index].created);\n    const umanDate = \"\" + ((data.getDate() < 10 ? '0' : '') + data.getDate()) + \"/\" +\n                    (((data.getMonth()+1) < 10 ? '0' : '') + (data.getMonth()+1)) + \"/\" +\n                    data.getFullYear() + \" \" +\n                    data.getHours()  + \":\" +\n                    ((data.getMinutes() < 10 ? '0' : '') + data.getMinutes())  + \":\" +\n                    data.getSeconds();\n    msg.payload[index].created = umanDate;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 740,
        "wires": [
            [
                "405014bf685aeebf"
            ]
        ]
    },
    {
        "id": "2c037337afa1495a",
        "type": "ui_form",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "label": "",
        "group": "df2566236273d26e",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "ID",
                "value": "id",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Name",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Description",
                "value": "desc",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "id": "",
            "name": "",
            "desc": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 90,
        "y": 120,
        "wires": [
            [
                "2554adb11c225902",
                "783b4cb03d902192",
                "fbfdd369866354cb"
            ]
        ]
    },
    {
        "id": "2554adb11c225902",
        "type": "debug",
        "z": "6ab738f287ab7ef9",
        "name": "form",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 60,
        "wires": []
    },
    {
        "id": "783b4cb03d902192",
        "type": "sqlite",
        "z": "6ab738f287ab7ef9",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "fixed",
        "sql": "CREATE TABLE IF NOT EXISTS test(id TEXT UNIQUE, name TEXT, description TEXT, created INTEGER, start INTEGER, stop INTEGER);",
        "name": "create table",
        "x": 370,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "c1c1115b4885b7cc",
        "type": "sqlite",
        "z": "6ab738f287ab7ef9",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "msg.topic",
        "sql": "CREATE TABLE IF NOT EXISTS readings(id INTEGER, timestamp INTEGER, location TEXT NOT NULL, temperature INTEGER, humidity INTEGER, co INTEGER);",
        "name": "insert data",
        "x": 830,
        "y": 180,
        "wires": [
            [
                "ddf39df0a015aa5f"
            ]
        ]
    },
    {
        "id": "733099ba4732e7fe",
        "type": "template",
        "z": "6ab738f287ab7ef9",
        "name": "compose query",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "INSERT INTO test\n(id,name,description,created)\nvalues\n(\"{{payload.id}}\", \"{{payload.name}}\", \"{{payload.desc}}\", {{payload.created}});",
        "output": "str",
        "x": 640,
        "y": 180,
        "wires": [
            [
                "c1c1115b4885b7cc",
                "8d4022dc48a5b819"
            ]
        ]
    },
    {
        "id": "fbfdd369866354cb",
        "type": "function",
        "z": "6ab738f287ab7ef9",
        "name": "add timestamp of creation",
        "func": "var currentDate = new Date()\nmsg.payload.created = currentDate.getTime();\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 180,
        "wires": [
            [
                "733099ba4732e7fe"
            ]
        ]
    },
    {
        "id": "8d4022dc48a5b819",
        "type": "debug",
        "z": "6ab738f287ab7ef9",
        "name": "query",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 140,
        "wires": []
    },
    {
        "id": "d5513f0cb0c5f692",
        "type": "ui_toast",
        "z": "6ab738f287ab7ef9",
        "position": "dialog",
        "displayTime": "",
        "highlight": "red",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 690,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "63b14836612f014e",
        "type": "catch",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "scope": [
            "c1c1115b4885b7cc"
        ],
        "uncaught": false,
        "x": 350,
        "y": 520,
        "wires": [
            [
                "9c9c8a0451e7d2bf"
            ]
        ]
    },
    {
        "id": "9c9c8a0451e7d2bf",
        "type": "function",
        "z": "6ab738f287ab7ef9",
        "name": "notification",
        "func": "msg. payload = \"The ID of the test already exists!\";\nmsg.topic = \"Insert a new ID\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 520,
        "wires": [
            [
                "d5513f0cb0c5f692"
            ]
        ]
    },
    {
        "id": "69e464032c9b837f",
        "type": "ui_table",
        "z": "6ab738f287ab7ef9",
        "group": "4b4471c50f53aec4",
        "name": "",
        "order": 1,
        "width": "20",
        "height": "12",
        "columns": [
            {
                "field": "id",
                "title": "ID",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "name",
                "title": "Name",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "description",
                "title": "Description",
                "width": "20%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "created",
                "title": "Created",
                "width": "25%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "executed",
                "title": "Executed",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 810,
        "y": 340,
        "wires": []
    },
    {
        "id": "ddf39df0a015aa5f",
        "type": "sqlite",
        "z": "6ab738f287ab7ef9",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "fixed",
        "sql": "SELECT\n    *\nFROM\n    test\nORDER BY\n    created DESC;",
        "name": "show tests",
        "x": 370,
        "y": 360,
        "wires": [
            [
                "62b07f4592dc3abd"
            ]
        ]
    },
    {
        "id": "62b07f4592dc3abd",
        "type": "function",
        "z": "6ab738f287ab7ef9",
        "name": "add timestamp of creation",
        "func": "for (let index = 0; index < msg.payload.length; index++) {\n    const data = new Date(msg.payload[index].created);\n    const umanDate = \"\" + ((data.getDate() < 10 ? '0' : '') + data.getDate()) + \"/\" +\n                    (((data.getMonth()+1) < 10 ? '0' : '') + (data.getMonth()+1)) + \"/\" +\n                    data.getFullYear() + \" \" +\n                    data.getHours()  + \":\" +\n                    ((data.getMinutes() < 10 ? '0' : '') + data.getMinutes())  + \":\" +\n                    data.getSeconds();\n    msg.payload[index].created = umanDate;\n    if(!(msg.payload[index].start) || !(msg.payload[index].stop)) {\n        msg.payload[index].executed = \"false\"\n    }\n    else {\n        msg.payload[index].executed = \"true\"\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 360,
        "wires": [
            [
                "69e464032c9b837f",
                "b0bd4940b30224e7",
                "a61e1c5c58a45d7c"
            ]
        ]
    },
    {
        "id": "c73e051ebc8ce252",
        "type": "inject",
        "z": "6ab738f287ab7ef9",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 360,
        "wires": [
            [
                "ddf39df0a015aa5f"
            ]
        ]
    },
    {
        "id": "b0bd4940b30224e7",
        "type": "debug",
        "z": "6ab738f287ab7ef9",
        "name": "table setup",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 400,
        "wires": []
    },
    {
        "id": "a61e1c5c58a45d7c",
        "type": "link out",
        "z": "6ab738f287ab7ef9",
        "name": "new test",
        "mode": "link",
        "links": [
            "dec2e7b36d26179c"
        ],
        "x": 775,
        "y": 460,
        "wires": []
    },
    {
        "id": "8694bf38a88861ad",
        "type": "ui_table",
        "z": "e146cdeecf9bcebd",
        "group": "6db24db1cd29db42",
        "name": "",
        "order": 1,
        "width": "20",
        "height": "12",
        "columns": [
            {
                "field": "id",
                "title": "ID",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "name",
                "title": "Name",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "description",
                "title": "Description",
                "width": "20%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "created",
                "title": "Created",
                "width": "25%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "executable",
                "title": "Start/Stop",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 730,
        "y": 80,
        "wires": []
    },
    {
        "id": "d9dae8b61f5cc9b0",
        "type": "sqlite",
        "z": "e146cdeecf9bcebd",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "fixed",
        "sql": "SELECT\n    *\nFROM\n    test\nORDER BY\n    created DESC;",
        "name": "show tests",
        "x": 290,
        "y": 80,
        "wires": [
            [
                "154445c3ef8bd65f"
            ]
        ]
    },
    {
        "id": "154445c3ef8bd65f",
        "type": "function",
        "z": "e146cdeecf9bcebd",
        "name": "add timestamp of creation",
        "func": "for (let index = 0; index < msg.payload.length; index++) {\n    const data = new Date(msg.payload[index].created);\n    const umanDate = \"\" + ((data.getDate() < 10 ? '0' : '') + data.getDate()) + \"/\" +\n                    (((data.getMonth()+1) < 10 ? '0' : '') + (data.getMonth()+1)) + \"/\" +\n                    data.getFullYear() + \" \" +\n                    data.getHours()  + \":\" +\n                    ((data.getMinutes() < 10 ? '0' : '') + data.getMinutes())  + \":\" +\n                    data.getSeconds();\n    msg.payload[index].created = umanDate;\n    if(!(msg.payload[index].start) || !(msg.payload[index].stop)) {\n        msg.payload[index].executable = true\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 80,
        "wires": [
            [
                "8694bf38a88861ad",
                "2f5b69afc6554bd7"
            ]
        ]
    },
    {
        "id": "5d275f4e59c77d1d",
        "type": "inject",
        "z": "e146cdeecf9bcebd",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 80,
        "wires": [
            [
                "d9dae8b61f5cc9b0"
            ]
        ]
    },
    {
        "id": "2f5b69afc6554bd7",
        "type": "debug",
        "z": "e146cdeecf9bcebd",
        "name": "table setup",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 160,
        "wires": []
    },
    {
        "id": "dec2e7b36d26179c",
        "type": "link in",
        "z": "e146cdeecf9bcebd",
        "name": "update manager",
        "links": [
            "a61e1c5c58a45d7c"
        ],
        "x": 145,
        "y": 140,
        "wires": [
            [
                "d9dae8b61f5cc9b0"
            ]
        ]
    },
    {
        "id": "8acc848b1c3bea11",
        "type": "ui_button",
        "z": "e146cdeecf9bcebd",
        "name": "",
        "group": "6db24db1cd29db42",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "id",
        "payloadType": "global",
        "topic": "run",
        "topicType": "global",
        "x": 470,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "3f4966d0.43d8fa",
        "type": "link in",
        "z": "7c26349d.98cf8c",
        "name": "link from read",
        "links": [
            "93a6e83efaaa13c1"
        ],
        "x": 75,
        "y": 60,
        "wires": [
            [
                "8b7160a2.fa561"
            ]
        ]
    },
    {
        "id": "8b7160a2.fa561",
        "type": "sqlite",
        "z": "7c26349d.98cf8c",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "fixed",
        "sql": "SELECT DISTINCT id FROM readings;",
        "name": "Select ids",
        "x": 300,
        "y": 60,
        "wires": [
            [
                "4bb0d5b7.07fadc"
            ]
        ]
    },
    {
        "id": "4f3638e1.4d95d8",
        "type": "switch",
        "z": "7c26349d.98cf8c",
        "name": "",
        "property": "payload.id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "bfc2b520b356414f88xjxa",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 270,
        "y": 180,
        "wires": [
            [
                "5c5eba74.7d0074",
                "65412986.e8c2e8",
                "b9c31f01.ff5da",
                "21f1426c.4097fe",
                "2db1b1397dcfac0e",
                "42da73bfe0b2dd0f",
                "9f8ae5d7.f11ee8"
            ]
        ]
    },
    {
        "id": "4bb0d5b7.07fadc",
        "type": "split",
        "z": "7c26349d.98cf8c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 150,
        "y": 180,
        "wires": [
            [
                "4f3638e1.4d95d8"
            ]
        ]
    },
    {
        "id": "3af5aa14.240cf6",
        "type": "sqlite",
        "z": "7c26349d.98cf8c",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SELECT current",
        "x": 700,
        "y": 380,
        "wires": [
            [
                "c2bbac05.fac51"
            ]
        ]
    },
    {
        "id": "3b8b77e.8270888",
        "type": "sqlite",
        "z": "7c26349d.98cf8c",
        "d": true,
        "mydb": "ff263058e6c863b7",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "avg temperature",
        "x": 700,
        "y": 260,
        "wires": [
            [
                "847c0d87.7fd7c"
            ]
        ]
    },
    {
        "id": "4446b0fa.d31bb",
        "type": "sqlite",
        "z": "7c26349d.98cf8c",
        "d": true,
        "mydb": "ff263058e6c863b7",
        "sqlquery": "msg.topic",
        "sql": "SELECT AVG(humidity) FROM readings WHERE (id == \"LLab-1\");",
        "name": "avg humidity",
        "x": 690,
        "y": 320,
        "wires": [
            [
                "83cf51e.d87b2b"
            ]
        ]
    },
    {
        "id": "847c0d87.7fd7c",
        "type": "function",
        "z": "7c26349d.98cf8c",
        "d": true,
        "name": "",
        "func": "msg.payload = msg.payload[0][\"AVG(temperature)\"].toFixed(1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 260,
        "wires": [
            [
                "fab29475.15dfc8"
            ]
        ]
    },
    {
        "id": "83cf51e.d87b2b",
        "type": "function",
        "z": "7c26349d.98cf8c",
        "d": true,
        "name": "",
        "func": "msg.payload = msg.payload[0][\"AVG(humidity)\"].toFixed(1);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 320,
        "wires": [
            [
                "7c7e7e05.e532d"
            ]
        ]
    },
    {
        "id": "5c5eba74.7d0074",
        "type": "template",
        "z": "7c26349d.98cf8c",
        "d": true,
        "name": "compose query",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT AVG(temperature) FROM readings WHERE (id == \"{{payload.id}}\");",
        "output": "str",
        "x": 500,
        "y": 260,
        "wires": [
            [
                "3b8b77e.8270888"
            ]
        ]
    },
    {
        "id": "65412986.e8c2e8",
        "type": "template",
        "z": "7c26349d.98cf8c",
        "d": true,
        "name": "compose query",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT AVG(humidity) FROM readings WHERE (id == \"{{payload.id}}\");",
        "output": "str",
        "x": 500,
        "y": 320,
        "wires": [
            [
                "4446b0fa.d31bb"
            ]
        ]
    },
    {
        "id": "b9c31f01.ff5da",
        "type": "template",
        "z": "7c26349d.98cf8c",
        "name": "compose query",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT\n    timestamp,current\nFROM\n    readings\nWHERE\n    (id == \"{{payload.id}}\")\nORDER BY\n    timestamp ASC;",
        "output": "str",
        "x": 500,
        "y": 380,
        "wires": [
            [
                "3af5aa14.240cf6"
            ]
        ]
    },
    {
        "id": "c2bbac05.fac51",
        "type": "function",
        "z": "7c26349d.98cf8c",
        "name": "chart generator",
        "func": "var chart = [];\n\nfor(let i=0;i<msg.payload.length;i++)\n{\n    var data = {\"x\": msg.payload[i].timestamp*1000, \"y\": msg.payload[i].current};\n    chart.push(data);\n}\nmsg.payload=[{\n    \"series\": [\"current\"],\n    \"data\": [chart],\n    \"labels\": [\"\"]\n}];\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 380,
        "wires": [
            [
                "79a6134a.cef12c"
            ]
        ]
    },
    {
        "id": "d6fba0db.f588b",
        "type": "sqlite",
        "z": "7c26349d.98cf8c",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SELECT voltage",
        "x": 700,
        "y": 440,
        "wires": [
            [
                "a539525.cff42b"
            ]
        ]
    },
    {
        "id": "21f1426c.4097fe",
        "type": "template",
        "z": "7c26349d.98cf8c",
        "name": "compose query",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT\n    timestamp,voltage\nFROM\n    readings\nWHERE\n    (id == \"{{payload.id}}\")\nORDER BY\n    timestamp ASC;",
        "output": "str",
        "x": 500,
        "y": 440,
        "wires": [
            [
                "d6fba0db.f588b"
            ]
        ]
    },
    {
        "id": "a539525.cff42b",
        "type": "function",
        "z": "7c26349d.98cf8c",
        "name": "chart generator",
        "func": "var chart = [];\n\nfor(let i=0;i<msg.payload.length;i++)\n{\n    var data = {\"x\": msg.payload[i].timestamp*1000, \"y\": msg.payload[i].voltage};\n    chart.push(data);\n}\nmsg.payload=[{\n    \"series\": [\"voltage\"],\n    \"data\": [chart],\n    \"labels\": [\"\"]\n}];\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 440,
        "wires": [
            [
                "b9cfb89d.d07388"
            ]
        ]
    },
    {
        "id": "fab29475.15dfc8",
        "type": "ui_gauge",
        "z": "7c26349d.98cf8c",
        "d": true,
        "name": "",
        "group": "4930880ae94878e3",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature",
        "label": "°C",
        "format": "{{msg.payload}}",
        "min": "-20",
        "max": "50",
        "colors": [
            "#00d5ff",
            "#00ff1e",
            "#ca3838"
        ],
        "seg1": "5",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 1110,
        "y": 260,
        "wires": []
    },
    {
        "id": "7c7e7e05.e532d",
        "type": "ui_gauge",
        "z": "7c26349d.98cf8c",
        "d": true,
        "name": "",
        "group": "4930880ae94878e3",
        "order": 2,
        "width": 1,
        "height": 1,
        "gtype": "wave",
        "title": "Humidity",
        "label": "%",
        "format": "{{msg.payload}}",
        "min": "10",
        "max": "90",
        "colors": [
            "#00d5ff",
            "#00ff1e",
            "#ca3838"
        ],
        "seg1": "40",
        "seg2": "70",
        "diff": false,
        "className": "",
        "x": 1100,
        "y": 320,
        "wires": []
    },
    {
        "id": "79a6134a.cef12c",
        "type": "ui_chart",
        "z": "7c26349d.98cf8c",
        "name": "",
        "group": "e20e8dfcf55ba57e",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#e02f10",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1090,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "b9cfb89d.d07388",
        "type": "ui_chart",
        "z": "7c26349d.98cf8c",
        "name": "",
        "group": "6d7eafb3ae89f441",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1090,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "4a28e935902ae057",
        "type": "ui_text",
        "z": "7c26349d.98cf8c",
        "group": "590f4fd2e0f3281c",
        "order": 3,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "Last seen:",
        "format": "{{msg.lastday}}/{{msg.lastmonth}}/{{msg.lastyear}} {{msg.lasthour}}:{{msg.lastminute}}:{{msg.lastsecond}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1110,
        "y": 200,
        "wires": []
    },
    {
        "id": "2db1b1397dcfac0e",
        "type": "template",
        "z": "7c26349d.98cf8c",
        "name": "compose query",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT\n    timestamp\nFROM\n    readings\nWHERE\n    (id == \"{{payload.id}}\")\nORDER BY\n    timestamp DESC;",
        "output": "str",
        "x": 500,
        "y": 200,
        "wires": [
            [
                "c565503dd39e8a1c"
            ]
        ]
    },
    {
        "id": "c565503dd39e8a1c",
        "type": "sqlite",
        "z": "7c26349d.98cf8c",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SELECT last seen",
        "x": 710,
        "y": 200,
        "wires": [
            [
                "3633cbc0a63b884c"
            ]
        ]
    },
    {
        "id": "3633cbc0a63b884c",
        "type": "function",
        "z": "7c26349d.98cf8c",
        "name": "",
        "func": "const timestamp = msg.payload[0].timestamp*1000;\nconst data = new Date(timestamp);\nmsg = {\n    timestamp: timestamp,\n    lastday: data.getDate(),\n    lastmonth: data.getMonth()+1,\n    lastyear: data.getFullYear(),\n    lasthour: data.getHours(),\n    lastminute: data.getMinutes(),\n    lastsecond: data.getSeconds()\n};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 200,
        "wires": [
            [
                "4a28e935902ae057"
            ]
        ]
    },
    {
        "id": "faf3497ea3bc682e",
        "type": "sqlite",
        "z": "7c26349d.98cf8c",
        "mydb": "ff263058e6c863b7",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "SELECT power",
        "x": 700,
        "y": 500,
        "wires": [
            [
                "56a759206b176e8c"
            ]
        ]
    },
    {
        "id": "42da73bfe0b2dd0f",
        "type": "template",
        "z": "7c26349d.98cf8c",
        "name": "compose query",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT\n    timestamp,power\nFROM\n    readings\nWHERE\n    (id == \"{{payload.id}}\")\nORDER BY\n    timestamp ASC;",
        "output": "str",
        "x": 500,
        "y": 500,
        "wires": [
            [
                "faf3497ea3bc682e"
            ]
        ]
    },
    {
        "id": "56a759206b176e8c",
        "type": "function",
        "z": "7c26349d.98cf8c",
        "name": "chart generator",
        "func": "var chart = [];\n\nfor(let i=0;i<msg.payload.length;i++)\n{\n    var data = { \"x\": msg.payload[i].timestamp * 1000, \"y\": msg.payload[i].power};\n    chart.push(data);\n}\nmsg.payload=[{\n    \"series\": [\"power\"],\n    \"data\": [chart],\n    \"labels\": [\"\"]\n}];\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 500,
        "wires": [
            [
                "3d067267244ff0a6"
            ]
        ]
    },
    {
        "id": "3d067267244ff0a6",
        "type": "ui_chart",
        "z": "7c26349d.98cf8c",
        "name": "",
        "group": "bb5dd6f7568c5483",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "1000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1090,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "9f8ae5d7.f11ee8",
        "type": "ui_text",
        "z": "7c26349d.98cf8c",
        "group": "590f4fd2e0f3281c",
        "order": 1,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "id:",
        "format": "{{msg.payload.id}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 470,
        "y": 140,
        "wires": []
    },
    {
        "id": "27c2dce6c4d7b089",
        "type": "mqtt in",
        "z": "22052e68fedf6ce6",
        "d": true,
        "g": "24e38c8e9edd57c3",
        "name": "",
        "topic": "unipr/sistemb/datetime",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "e7518674fd285e30",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 120,
        "wires": [
            [
                "4dc1cbd578ef6065",
                "baabe529f7bd0577"
            ]
        ]
    },
    {
        "id": "c45fe38b89497f6e",
        "type": "mqtt out",
        "z": "22052e68fedf6ce6",
        "d": true,
        "name": "",
        "topic": "unipr/sistemb/sensors",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f14a0f059c981c25",
        "x": 560,
        "y": 740,
        "wires": []
    },
    {
        "id": "4dc1cbd578ef6065",
        "type": "debug",
        "z": "22052e68fedf6ce6",
        "d": true,
        "g": "24e38c8e9edd57c3",
        "name": "uC /datetime",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 80,
        "wires": []
    },
    {
        "id": "60e1c3c143215c5a",
        "type": "inject",
        "z": "22052e68fedf6ce6",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 740,
        "wires": [
            [
                "433eccb0e5bf24b3"
            ]
        ]
    },
    {
        "id": "433eccb0e5bf24b3",
        "type": "function",
        "z": "22052e68fedf6ce6",
        "d": true,
        "name": "json composer",
        "func": "msg.payload = {\n    \"timestamp\": msg.payload,\n    \"sensors\": {\n        \"temperature\": Math.floor(Math.random()*30),\n    },\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 740,
        "wires": [
            [
                "c45fe38b89497f6e"
            ]
        ]
    },
    {
        "id": "caea89b14caf1c92",
        "type": "mqtt in",
        "z": "22052e68fedf6ce6",
        "d": true,
        "g": "24e38c8e9edd57c3",
        "name": "",
        "topic": "unipr/sistemb/cmd",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "e7518674fd285e30",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 320,
        "wires": [
            [
                "065aebc4b5cc9c76",
                "13944cdd0a4d2bd7"
            ]
        ]
    },
    {
        "id": "065aebc4b5cc9c76",
        "type": "debug",
        "z": "22052e68fedf6ce6",
        "d": true,
        "g": "24e38c8e9edd57c3",
        "name": "uC /cmd",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 300,
        "wires": []
    },
    {
        "id": "ad2ed75dae9f6022",
        "type": "switch",
        "z": "22052e68fedf6ce6",
        "d": true,
        "g": "24e38c8e9edd57c3",
        "name": "switch run",
        "property": "run",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 420,
        "y": 440,
        "wires": [
            [
                "b69c384fe6c0685b"
            ],
            [
                "5429f86c39cf2384"
            ]
        ]
    },
    {
        "id": "b69c384fe6c0685b",
        "type": "trigger",
        "z": "22052e68fedf6ce6",
        "d": true,
        "g": "24e38c8e9edd57c3",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "date",
        "op2type": "str",
        "duration": "-1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 800,
        "y": 460,
        "wires": [
            [
                "84cb1690f793d411"
            ]
        ]
    },
    {
        "id": "84cb1690f793d411",
        "type": "function",
        "z": "22052e68fedf6ce6",
        "d": true,
        "g": "24e38c8e9edd57c3",
        "name": "json composer",
        "func": "msg.payload = {\n    \"timestamp\": msg.payload,\n    \"sensors\": {\n        \"temperature\": Math.floor(Math.random()*30),\n    },\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 520,
        "wires": [
            [
                "455840f784681733"
            ]
        ]
    },
    {
        "id": "455840f784681733",
        "type": "mqtt out",
        "z": "22052e68fedf6ce6",
        "d": true,
        "g": "24e38c8e9edd57c3",
        "name": "",
        "topic": "unipr/sistemb/sensors",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7518674fd285e30",
        "x": 820,
        "y": 580,
        "wires": []
    },
    {
        "id": "5429f86c39cf2384",
        "type": "function",
        "z": "22052e68fedf6ce6",
        "d": true,
        "g": "24e38c8e9edd57c3",
        "name": "reset",
        "func": "msg.reset=true;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 520,
        "wires": [
            [
                "b69c384fe6c0685b"
            ]
        ]
    },
    {
        "id": "baabe529f7bd0577",
        "type": "change",
        "z": "22052e68fedf6ce6",
        "d": true,
        "g": "24e38c8e9edd57c3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "timestamp",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 140,
        "wires": [
            [
                "6fe6b321b99a40d0"
            ]
        ]
    },
    {
        "id": "8a9d8b8567b03ad7",
        "type": "inject",
        "z": "22052e68fedf6ce6",
        "d": true,
        "g": "24e38c8e9edd57c3",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 220,
        "wires": [
            [
                "0774912643e5f5bf"
            ]
        ]
    },
    {
        "id": "0774912643e5f5bf",
        "type": "change",
        "z": "22052e68fedf6ce6",
        "d": true,
        "g": "24e38c8e9edd57c3",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "timestamp",
                "pt": "flow"
            },
            {
                "t": "set",
                "p": "run",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 220,
        "wires": [
            [
                "b54f4203d162e4d6"
            ]
        ]
    },
    {
        "id": "821bc403f30361e3",
        "type": "switch",
        "z": "22052e68fedf6ce6",
        "d": true,
        "g": "24e38c8e9edd57c3",
        "name": "switch datetime",
        "property": "timestamp",
        "propertyType": "flow",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 240,
        "y": 480,
        "wires": [
            [
                "ad2ed75dae9f6022"
            ],
            [
                "5429f86c39cf2384"
            ]
        ]
    },
    {
        "id": "13944cdd0a4d2bd7",
        "type": "change",
        "z": "22052e68fedf6ce6",
        "d": true,
        "g": "24e38c8e9edd57c3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "run",
                "pt": "flow",
                "to": "payload.run",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 340,
        "wires": [
            [
                "f58a79e17e9c1853"
            ]
        ]
    },
    {
        "id": "6fe6b321b99a40d0",
        "type": "link out",
        "z": "22052e68fedf6ce6",
        "d": true,
        "g": "24e38c8e9edd57c3",
        "name": "to logic",
        "mode": "link",
        "links": [
            "d9192735b783c1bc"
        ],
        "x": 625,
        "y": 140,
        "wires": []
    },
    {
        "id": "b54f4203d162e4d6",
        "type": "link out",
        "z": "22052e68fedf6ce6",
        "d": true,
        "g": "24e38c8e9edd57c3",
        "name": "to logic",
        "mode": "link",
        "links": [
            "d9192735b783c1bc"
        ],
        "x": 625,
        "y": 220,
        "wires": []
    },
    {
        "id": "f58a79e17e9c1853",
        "type": "link out",
        "z": "22052e68fedf6ce6",
        "d": true,
        "g": "24e38c8e9edd57c3",
        "name": "to logic",
        "mode": "link",
        "links": [
            "d9192735b783c1bc"
        ],
        "x": 625,
        "y": 340,
        "wires": []
    },
    {
        "id": "d9192735b783c1bc",
        "type": "link in",
        "z": "22052e68fedf6ce6",
        "d": true,
        "g": "24e38c8e9edd57c3",
        "name": "logic",
        "links": [
            "b54f4203d162e4d6",
            "6fe6b321b99a40d0",
            "f58a79e17e9c1853"
        ],
        "x": 115,
        "y": 480,
        "wires": [
            [
                "821bc403f30361e3"
            ]
        ]
    },
    {
        "id": "9cea513f08d3b296",
        "type": "inject",
        "z": "f58570a26e45bbdc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 100,
        "wires": [
            [
                "82776704c0bd997c"
            ]
        ]
    },
    {
        "id": "82776704c0bd997c",
        "type": "mqtt out",
        "z": "f58570a26e45bbdc",
        "name": "",
        "topic": "unipr/sistemb/datetime",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7518674fd285e30",
        "x": 580,
        "y": 160,
        "wires": []
    },
    {
        "id": "3ee1456e808a5c0d",
        "type": "ui_button",
        "z": "f58570a26e45bbdc",
        "name": "",
        "group": "4ab556e815260d6e",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Update datetime",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 300,
        "y": 160,
        "wires": [
            [
                "82776704c0bd997c",
                "542afd39bed67724"
            ]
        ]
    },
    {
        "id": "ceba04c1f4989fb7",
        "type": "ui_switch",
        "z": "f58570a26e45bbdc",
        "name": "",
        "label": "Run",
        "tooltip": "",
        "group": "4ab556e815260d6e",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "{\"run\":true}",
        "onvalueType": "json",
        "onicon": "",
        "oncolor": "",
        "offvalue": "{\"run\":false}",
        "offvalueType": "json",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 330,
        "y": 360,
        "wires": [
            [
                "a3014e30c64ba754",
                "487905fb34a8ea49"
            ]
        ]
    },
    {
        "id": "a3014e30c64ba754",
        "type": "mqtt out",
        "z": "f58570a26e45bbdc",
        "name": "",
        "topic": "unipr/sistemb/cmd",
        "qos": "0",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e7518674fd285e30",
        "x": 570,
        "y": 400,
        "wires": []
    },
    {
        "id": "07b43a5b4abb8ab4",
        "type": "ui_button",
        "z": "f58570a26e45bbdc",
        "name": "",
        "group": "5f10cab10122c8a2",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Update datetime",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 300,
        "y": 220,
        "wires": [
            [
                "82776704c0bd997c"
            ]
        ],
        "info": "log"
    },
    {
        "id": "1697dcc81fdb7ba5",
        "type": "ui_switch",
        "z": "f58570a26e45bbdc",
        "name": "",
        "label": "Run",
        "tooltip": "",
        "group": "5f10cab10122c8a2",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "{\"run\":true}",
        "onvalueType": "json",
        "onicon": "",
        "oncolor": "",
        "offvalue": "{\"run\":false}",
        "offvalueType": "json",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 330,
        "y": 440,
        "wires": [
            [
                "a3014e30c64ba754"
            ]
        ]
    },
    {
        "id": "542afd39bed67724",
        "type": "debug",
        "z": "f58570a26e45bbdc",
        "name": "home /datetime",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 100,
        "wires": []
    },
    {
        "id": "487905fb34a8ea49",
        "type": "debug",
        "z": "f58570a26e45bbdc",
        "name": "home /cmd",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 340,
        "wires": []
    },
    {
        "id": "6154c882050ecc47",
        "type": "debug",
        "z": "2f589c1fa72f19be",
        "name": "MQTT /sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 120,
        "wires": []
    },
    {
        "id": "67b507a3826e21a0",
        "type": "mqtt in",
        "z": "2f589c1fa72f19be",
        "name": "",
        "topic": "unipr/sistemb/sensors",
        "qos": "0",
        "datatype": "json",
        "broker": "e7518674fd285e30",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 220,
        "y": 200,
        "wires": [
            [
                "6154c882050ecc47",
                "34044a998f1267ae",
                "ff26227bcf240bf3"
            ]
        ]
    },
    {
        "id": "e505a53fc78b9d5d",
        "type": "ui_chart",
        "z": "2f589c1fa72f19be",
        "name": "",
        "group": "4ab556e815260d6e",
        "order": 7,
        "width": 0,
        "height": 0,
        "label": "Temperature chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 790,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "34044a998f1267ae",
        "type": "function",
        "z": "2f589c1fa72f19be",
        "name": "chart generator",
        "func": "msg = {\n        topic:\"temperature\",\n        payload: msg.payload.sensors.temperature,\n        timestamp: msg.payload.timestamp\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 200,
        "wires": [
            [
                "e505a53fc78b9d5d",
                "c4bf521f46db9309"
            ]
        ]
    },
    {
        "id": "c4bf521f46db9309",
        "type": "debug",
        "z": "2f589c1fa72f19be",
        "name": "chart data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 180,
        "wires": []
    },
    {
        "id": "ff26227bcf240bf3",
        "type": "link out",
        "z": "2f589c1fa72f19be",
        "name": "to log",
        "mode": "link",
        "links": [
            "40ead3aa7034bcca"
        ],
        "x": 435,
        "y": 340,
        "wires": []
    },
    {
        "id": "aa81207cb2f53d88",
        "type": "ui_button",
        "z": "2f589c1fa72f19be",
        "name": "",
        "group": "4ab556e815260d6e",
        "order": 9,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Clear",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 530,
        "y": 280,
        "wires": [
            [
                "e505a53fc78b9d5d"
            ]
        ]
    },
    {
        "id": "e96d0db5228ac0db",
        "type": "ui_table",
        "z": "464086673e62efae",
        "group": "5f10cab10122c8a2",
        "name": "",
        "order": 7,
        "width": 10,
        "height": 10,
        "columns": [
            {
                "field": "timestamp",
                "title": "timestamp",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "date",
                "title": "date",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "temperature",
                "title": "temperature",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 650,
        "y": 200,
        "wires": []
    },
    {
        "id": "40ead3aa7034bcca",
        "type": "link in",
        "z": "464086673e62efae",
        "name": "from /sensors",
        "links": [
            "ff26227bcf240bf3"
        ],
        "x": 255,
        "y": 120,
        "wires": [
            [
                "7b02e03953c3e5f4",
                "6a0680535503d75c"
            ]
        ]
    },
    {
        "id": "7b02e03953c3e5f4",
        "type": "function",
        "z": "464086673e62efae",
        "name": "parser",
        "func": "var d = new Date(msg.payload.timestamp);\nvar date =  d.getDate() + '/'\n            + (d.getMonth()+1) + '/'\n            + d.getFullYear() + \" \"\n            + d.getHours() + ':'\n            + d.getMinutes() + ':'\n            + d.getSeconds();\nmsg.payload = {\n    command: \"addRow\",\n    arguments: [\n        {\n            \"timestamp\": msg.payload.timestamp,\n            \"date\": date,\n            \"temperature\": msg.payload.sensors.temperature\n        },\n    ],\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 160,
        "wires": [
            [
                "e96d0db5228ac0db"
            ]
        ]
    },
    {
        "id": "6625ed02ded0af14",
        "type": "ui_button",
        "z": "464086673e62efae",
        "name": "",
        "group": "5f10cab10122c8a2",
        "order": 9,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Clear",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 450,
        "y": 240,
        "wires": [
            [
                "e96d0db5228ac0db"
            ]
        ]
    },
    {
        "id": "6a0680535503d75c",
        "type": "debug",
        "z": "464086673e62efae",
        "name": "MQTT /sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 100,
        "wires": []
    }
]